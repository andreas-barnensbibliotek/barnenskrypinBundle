'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="AJDNNDatabase_v5")>  _
Partial Public Class skrivbokenLinqDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InserttblAJBarnensSkrivCategory(instance As tblAJBarnensSkrivCategory)
    End Sub
  Partial Private Sub UpdatetblAJBarnensSkrivCategory(instance As tblAJBarnensSkrivCategory)
    End Sub
  Partial Private Sub DeletetblAJBarnensSkrivCategory(instance As tblAJBarnensSkrivCategory)
    End Sub
  Partial Private Sub InserttblAJBarnensSkriv(instance As tblAJBarnensSkriv)
    End Sub
  Partial Private Sub UpdatetblAJBarnensSkriv(instance As tblAJBarnensSkriv)
    End Sub
  Partial Private Sub DeletetblAJBarnensSkriv(instance As tblAJBarnensSkriv)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.krypinSkrivboken.My.MySettings.Default.AJDNNDatabase_v5ConnectionString1, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property tblAJBarnensSkrivCategories() As System.Data.Linq.Table(Of tblAJBarnensSkrivCategory)
		Get
			Return Me.GetTable(Of tblAJBarnensSkrivCategory)
		End Get
	End Property
	
	Public ReadOnly Property tblAJBarnensSkrivs() As System.Data.Linq.Table(Of tblAJBarnensSkriv)
		Get
			Return Me.GetTable(Of tblAJBarnensSkriv)
		End Get
	End Property
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.AJBarnensSkrivCRUD")>  _
	Public Function AJBarnensSkrivCRUD(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal typ As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="SkrivID", DbType:="Int")> ByVal skrivID As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal userId As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Inserted", DbType:="Date")> ByVal inserted As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="NVarChar(50)")> ByVal title As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(MAX)")> ByVal story As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Category", DbType:="Int")> ByVal category As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Approved", DbType:="Int")> ByVal approved As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Gillar", DbType:="Int")> ByVal gillar As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal publish As System.Nullable(Of Integer)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), typ, skrivID, userId, inserted, title, story, category, approved, gillar, publish)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.AJ_BB_Krypin_skrivbok_byUserid")>  _
	Public Function AJ_BB_Krypin_skrivbok_byUserid(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal typ As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal userid As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal approved As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal publish As System.Nullable(Of Integer)) As ISingleResult(Of AJ_BB_Krypin_skrivbok_byUseridResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), typ, userid, approved, publish)
		Return CType(result.ReturnValue,ISingleResult(Of AJ_BB_Krypin_skrivbok_byUseridResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.AJ_BB_Krypin_skrivbok_byCategory")>  _
	Public Function AJ_BB_Krypin_skrivbok_byCategory(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Category", DbType:="Int")> ByVal category As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal approved As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal publish As System.Nullable(Of Integer)) As ISingleResult(Of AJ_BB_Krypin_skrivbok_byCategoryResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), category, approved, publish)
		Return CType(result.ReturnValue,ISingleResult(Of AJ_BB_Krypin_skrivbok_byCategoryResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.AJ_BB_Krypin_skrivbok_bySkrivID")>  _
	Public Function AJ_BB_Krypin_skrivbok_bySkrivID(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal skrivID As System.Nullable(Of Integer)) As ISingleResult(Of AJ_BB_Krypin_skrivbok_bySkrivIDResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), skrivID)
		Return CType(result.ReturnValue,ISingleResult(Of AJ_BB_Krypin_skrivbok_bySkrivIDResult))
	End Function
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblAJBarnensSkrivCategory")>  _
Partial Public Class tblAJBarnensSkrivCategory
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _catid As Integer
	
	Private _category As String
	
	Private _catimg As String
	
	Private _catcolor As String
	
	Private _catactive As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OncatidChanging(value As Integer)
    End Sub
    Partial Private Sub OncatidChanged()
    End Sub
    Partial Private Sub OncategoryChanging(value As String)
    End Sub
    Partial Private Sub OncategoryChanged()
    End Sub
    Partial Private Sub OncatimgChanging(value As String)
    End Sub
    Partial Private Sub OncatimgChanged()
    End Sub
    Partial Private Sub OncatcolorChanging(value As String)
    End Sub
    Partial Private Sub OncatcolorChanged()
    End Sub
    Partial Private Sub OncatactiveChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OncatactiveChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_catid", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property catid() As Integer
		Get
			Return Me._catid
		End Get
		Set
			If ((Me._catid = value)  _
						= false) Then
				Me.OncatidChanging(value)
				Me.SendPropertyChanging
				Me._catid = value
				Me.SendPropertyChanged("catid")
				Me.OncatidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_category", DbType:="NVarChar(50)")>  _
	Public Property category() As String
		Get
			Return Me._category
		End Get
		Set
			If (String.Equals(Me._category, value) = false) Then
				Me.OncategoryChanging(value)
				Me.SendPropertyChanging
				Me._category = value
				Me.SendPropertyChanged("category")
				Me.OncategoryChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_catimg", DbType:="NVarChar(50)")>  _
	Public Property catimg() As String
		Get
			Return Me._catimg
		End Get
		Set
			If (String.Equals(Me._catimg, value) = false) Then
				Me.OncatimgChanging(value)
				Me.SendPropertyChanging
				Me._catimg = value
				Me.SendPropertyChanged("catimg")
				Me.OncatimgChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_catcolor", DbType:="NVarChar(10)")>  _
	Public Property catcolor() As String
		Get
			Return Me._catcolor
		End Get
		Set
			If (String.Equals(Me._catcolor, value) = false) Then
				Me.OncatcolorChanging(value)
				Me.SendPropertyChanging
				Me._catcolor = value
				Me.SendPropertyChanged("catcolor")
				Me.OncatcolorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_catactive", DbType:="Int")>  _
	Public Property catactive() As System.Nullable(Of Integer)
		Get
			Return Me._catactive
		End Get
		Set
			If (Me._catactive.Equals(value) = false) Then
				Me.OncatactiveChanging(value)
				Me.SendPropertyChanging
				Me._catactive = value
				Me.SendPropertyChanged("catactive")
				Me.OncatactiveChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblAJBarnensSkriv")>  _
Partial Public Class tblAJBarnensSkriv
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _SkrivID As Integer
	
	Private _Userid As Integer
	
	Private _Inserted As Date
	
	Private _Title As String
	
	Private _Story As String
	
	Private _Category As System.Nullable(Of Integer)
	
	Private _Approved As System.Nullable(Of Integer)
	
	Private _Gillar As System.Nullable(Of Integer)
	
	Private _publish As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnSkrivIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnSkrivIDChanged()
    End Sub
    Partial Private Sub OnUseridChanging(value As Integer)
    End Sub
    Partial Private Sub OnUseridChanged()
    End Sub
    Partial Private Sub OnInsertedChanging(value As Date)
    End Sub
    Partial Private Sub OnInsertedChanged()
    End Sub
    Partial Private Sub OnTitleChanging(value As String)
    End Sub
    Partial Private Sub OnTitleChanged()
    End Sub
    Partial Private Sub OnStoryChanging(value As String)
    End Sub
    Partial Private Sub OnStoryChanged()
    End Sub
    Partial Private Sub OnCategoryChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCategoryChanged()
    End Sub
    Partial Private Sub OnApprovedChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnApprovedChanged()
    End Sub
    Partial Private Sub OnGillarChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnGillarChanged()
    End Sub
    Partial Private Sub OnpublishChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnpublishChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SkrivID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property SkrivID() As Integer
		Get
			Return Me._SkrivID
		End Get
		Set
			If ((Me._SkrivID = value)  _
						= false) Then
				Me.OnSkrivIDChanging(value)
				Me.SendPropertyChanging
				Me._SkrivID = value
				Me.SendPropertyChanged("SkrivID")
				Me.OnSkrivIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Userid", DbType:="Int NOT NULL")>  _
	Public Property Userid() As Integer
		Get
			Return Me._Userid
		End Get
		Set
			If ((Me._Userid = value)  _
						= false) Then
				Me.OnUseridChanging(value)
				Me.SendPropertyChanging
				Me._Userid = value
				Me.SendPropertyChanged("Userid")
				Me.OnUseridChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Inserted", DbType:="Date NOT NULL")>  _
	Public Property Inserted() As Date
		Get
			Return Me._Inserted
		End Get
		Set
			If ((Me._Inserted = value)  _
						= false) Then
				Me.OnInsertedChanging(value)
				Me.SendPropertyChanging
				Me._Inserted = value
				Me.SendPropertyChanged("Inserted")
				Me.OnInsertedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Title", DbType:="NVarChar(50)")>  _
	Public Property Title() As String
		Get
			Return Me._Title
		End Get
		Set
			If (String.Equals(Me._Title, value) = false) Then
				Me.OnTitleChanging(value)
				Me.SendPropertyChanging
				Me._Title = value
				Me.SendPropertyChanged("Title")
				Me.OnTitleChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Story", DbType:="VarChar(MAX)")>  _
	Public Property Story() As String
		Get
			Return Me._Story
		End Get
		Set
			If (String.Equals(Me._Story, value) = false) Then
				Me.OnStoryChanging(value)
				Me.SendPropertyChanging
				Me._Story = value
				Me.SendPropertyChanged("Story")
				Me.OnStoryChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Category", DbType:="Int")>  _
	Public Property Category() As System.Nullable(Of Integer)
		Get
			Return Me._Category
		End Get
		Set
			If (Me._Category.Equals(value) = false) Then
				Me.OnCategoryChanging(value)
				Me.SendPropertyChanging
				Me._Category = value
				Me.SendPropertyChanged("Category")
				Me.OnCategoryChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Approved", DbType:="Int")>  _
	Public Property Approved() As System.Nullable(Of Integer)
		Get
			Return Me._Approved
		End Get
		Set
			If (Me._Approved.Equals(value) = false) Then
				Me.OnApprovedChanging(value)
				Me.SendPropertyChanging
				Me._Approved = value
				Me.SendPropertyChanged("Approved")
				Me.OnApprovedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Gillar", DbType:="Int")>  _
	Public Property Gillar() As System.Nullable(Of Integer)
		Get
			Return Me._Gillar
		End Get
		Set
			If (Me._Gillar.Equals(value) = false) Then
				Me.OnGillarChanging(value)
				Me.SendPropertyChanging
				Me._Gillar = value
				Me.SendPropertyChanged("Gillar")
				Me.OnGillarChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_publish", DbType:="Int")>  _
	Public Property publish() As System.Nullable(Of Integer)
		Get
			Return Me._publish
		End Get
		Set
			If (Me._publish.Equals(value) = false) Then
				Me.OnpublishChanging(value)
				Me.SendPropertyChanging
				Me._publish = value
				Me.SendPropertyChanged("publish")
				Me.OnpublishChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

Partial Public Class AJ_BB_Krypin_skrivbok_byUseridResult
	
	Private _SkrivID As Integer
	
	Private _Userid As Integer
	
	Private _username As String
	
	Private _Inserted As Date
	
	Private _Title As String
	
	Private _Story As String
	
	Private _Category As System.Nullable(Of Integer)
	
	Private _Approved As System.Nullable(Of Integer)
	
	Private _Gillar As System.Nullable(Of Integer)
	
	Private _publish As System.Nullable(Of Integer)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SkrivID", DbType:="Int NOT NULL")>  _
	Public Property SkrivID() As Integer
		Get
			Return Me._SkrivID
		End Get
		Set
			If ((Me._SkrivID = value)  _
						= false) Then
				Me._SkrivID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Userid", DbType:="Int NOT NULL")>  _
	Public Property Userid() As Integer
		Get
			Return Me._Userid
		End Get
		Set
			If ((Me._Userid = value)  _
						= false) Then
				Me._Userid = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_username", DbType:="NVarChar(128)")>  _
	Public Property username() As String
		Get
			Return Me._username
		End Get
		Set
			If (String.Equals(Me._username, value) = false) Then
				Me._username = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Inserted", DbType:="Date NOT NULL")>  _
	Public Property Inserted() As Date
		Get
			Return Me._Inserted
		End Get
		Set
			If ((Me._Inserted = value)  _
						= false) Then
				Me._Inserted = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Title", DbType:="NVarChar(50)")>  _
	Public Property Title() As String
		Get
			Return Me._Title
		End Get
		Set
			If (String.Equals(Me._Title, value) = false) Then
				Me._Title = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Story", DbType:="VarChar(MAX)")>  _
	Public Property Story() As String
		Get
			Return Me._Story
		End Get
		Set
			If (String.Equals(Me._Story, value) = false) Then
				Me._Story = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Category", DbType:="Int")>  _
	Public Property Category() As System.Nullable(Of Integer)
		Get
			Return Me._Category
		End Get
		Set
			If (Me._Category.Equals(value) = false) Then
				Me._Category = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Approved", DbType:="Int")>  _
	Public Property Approved() As System.Nullable(Of Integer)
		Get
			Return Me._Approved
		End Get
		Set
			If (Me._Approved.Equals(value) = false) Then
				Me._Approved = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Gillar", DbType:="Int")>  _
	Public Property Gillar() As System.Nullable(Of Integer)
		Get
			Return Me._Gillar
		End Get
		Set
			If (Me._Gillar.Equals(value) = false) Then
				Me._Gillar = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_publish", DbType:="Int")>  _
	Public Property publish() As System.Nullable(Of Integer)
		Get
			Return Me._publish
		End Get
		Set
			If (Me._publish.Equals(value) = false) Then
				Me._publish = value
			End If
		End Set
	End Property
End Class

Partial Public Class AJ_BB_Krypin_skrivbok_byCategoryResult
	
	Private _SkrivID As Integer
	
	Private _Userid As Integer
	
	Private _username As String
	
	Private _Inserted As Date
	
	Private _Title As String
	
	Private _Story As String
	
	Private _Category As System.Nullable(Of Integer)
	
	Private _Approved As System.Nullable(Of Integer)
	
	Private _Gillar As System.Nullable(Of Integer)
	
	Private _publish As System.Nullable(Of Integer)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SkrivID", DbType:="Int NOT NULL")>  _
	Public Property SkrivID() As Integer
		Get
			Return Me._SkrivID
		End Get
		Set
			If ((Me._SkrivID = value)  _
						= false) Then
				Me._SkrivID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Userid", DbType:="Int NOT NULL")>  _
	Public Property Userid() As Integer
		Get
			Return Me._Userid
		End Get
		Set
			If ((Me._Userid = value)  _
						= false) Then
				Me._Userid = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_username", DbType:="NVarChar(128)")>  _
	Public Property username() As String
		Get
			Return Me._username
		End Get
		Set
			If (String.Equals(Me._username, value) = false) Then
				Me._username = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Inserted", DbType:="Date NOT NULL")>  _
	Public Property Inserted() As Date
		Get
			Return Me._Inserted
		End Get
		Set
			If ((Me._Inserted = value)  _
						= false) Then
				Me._Inserted = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Title", DbType:="NVarChar(50)")>  _
	Public Property Title() As String
		Get
			Return Me._Title
		End Get
		Set
			If (String.Equals(Me._Title, value) = false) Then
				Me._Title = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Story", DbType:="VarChar(MAX)")>  _
	Public Property Story() As String
		Get
			Return Me._Story
		End Get
		Set
			If (String.Equals(Me._Story, value) = false) Then
				Me._Story = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Category", DbType:="Int")>  _
	Public Property Category() As System.Nullable(Of Integer)
		Get
			Return Me._Category
		End Get
		Set
			If (Me._Category.Equals(value) = false) Then
				Me._Category = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Approved", DbType:="Int")>  _
	Public Property Approved() As System.Nullable(Of Integer)
		Get
			Return Me._Approved
		End Get
		Set
			If (Me._Approved.Equals(value) = false) Then
				Me._Approved = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Gillar", DbType:="Int")>  _
	Public Property Gillar() As System.Nullable(Of Integer)
		Get
			Return Me._Gillar
		End Get
		Set
			If (Me._Gillar.Equals(value) = false) Then
				Me._Gillar = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_publish", DbType:="Int")>  _
	Public Property publish() As System.Nullable(Of Integer)
		Get
			Return Me._publish
		End Get
		Set
			If (Me._publish.Equals(value) = false) Then
				Me._publish = value
			End If
		End Set
	End Property
End Class

Partial Public Class AJ_BB_Krypin_skrivbok_bySkrivIDResult
	
	Private _SkrivID As Integer
	
	Private _Userid As Integer
	
	Private _username As String
	
	Private _Inserted As Date
	
	Private _Title As String
	
	Private _Story As String
	
	Private _Category As System.Nullable(Of Integer)
	
	Private _Approved As System.Nullable(Of Integer)
	
	Private _Gillar As System.Nullable(Of Integer)
	
	Private _publish As System.Nullable(Of Integer)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SkrivID", DbType:="Int NOT NULL")>  _
	Public Property SkrivID() As Integer
		Get
			Return Me._SkrivID
		End Get
		Set
			If ((Me._SkrivID = value)  _
						= false) Then
				Me._SkrivID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Userid", DbType:="Int NOT NULL")>  _
	Public Property Userid() As Integer
		Get
			Return Me._Userid
		End Get
		Set
			If ((Me._Userid = value)  _
						= false) Then
				Me._Userid = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_username", DbType:="NVarChar(128)")>  _
	Public Property username() As String
		Get
			Return Me._username
		End Get
		Set
			If (String.Equals(Me._username, value) = false) Then
				Me._username = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Inserted", DbType:="Date NOT NULL")>  _
	Public Property Inserted() As Date
		Get
			Return Me._Inserted
		End Get
		Set
			If ((Me._Inserted = value)  _
						= false) Then
				Me._Inserted = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Title", DbType:="NVarChar(50)")>  _
	Public Property Title() As String
		Get
			Return Me._Title
		End Get
		Set
			If (String.Equals(Me._Title, value) = false) Then
				Me._Title = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Story", DbType:="VarChar(MAX)")>  _
	Public Property Story() As String
		Get
			Return Me._Story
		End Get
		Set
			If (String.Equals(Me._Story, value) = false) Then
				Me._Story = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Category", DbType:="Int")>  _
	Public Property Category() As System.Nullable(Of Integer)
		Get
			Return Me._Category
		End Get
		Set
			If (Me._Category.Equals(value) = false) Then
				Me._Category = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Approved", DbType:="Int")>  _
	Public Property Approved() As System.Nullable(Of Integer)
		Get
			Return Me._Approved
		End Get
		Set
			If (Me._Approved.Equals(value) = false) Then
				Me._Approved = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Gillar", DbType:="Int")>  _
	Public Property Gillar() As System.Nullable(Of Integer)
		Get
			Return Me._Gillar
		End Get
		Set
			If (Me._Gillar.Equals(value) = false) Then
				Me._Gillar = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_publish", DbType:="Int")>  _
	Public Property publish() As System.Nullable(Of Integer)
		Get
			Return Me._publish
		End Get
		Set
			If (Me._publish.Equals(value) = false) Then
				Me._publish = value
			End If
		End Set
	End Property
End Class
