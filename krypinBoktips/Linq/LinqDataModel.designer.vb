'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="AJDNNDatabase_v5")>  _
Partial Public Class LinqDataModelDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InserttblAJBookTip(instance As tblAJBookTip)
    End Sub
  Partial Private Sub UpdatetblAJBookTip(instance As tblAJBookTip)
    End Sub
  Partial Private Sub DeletetblAJBookTip(instance As tblAJBookTip)
    End Sub
  Partial Private Sub InserttblAjKatalogBook(instance As tblAjKatalogBook)
    End Sub
  Partial Private Sub UpdatetblAjKatalogBook(instance As tblAjKatalogBook)
    End Sub
  Partial Private Sub DeletetblAjKatalogBook(instance As tblAjKatalogBook)
    End Sub
  Partial Private Sub InsertUser(instance As User)
    End Sub
  Partial Private Sub UpdateUser(instance As User)
    End Sub
  Partial Private Sub DeleteUser(instance As User)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.krypinBoktips.My.MySettings.Default.AJDNNDatabase_v5ConnectionString1, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property tblAJBookTips() As System.Data.Linq.Table(Of tblAJBookTip)
		Get
			Return Me.GetTable(Of tblAJBookTip)
		End Get
	End Property
	
	Public ReadOnly Property tblAjKatalogBooks() As System.Data.Linq.Table(Of tblAjKatalogBook)
		Get
			Return Me.GetTable(Of tblAjKatalogBook)
		End Get
	End Property
	
	Public ReadOnly Property Users() As System.Data.Linq.Table(Of User)
		Get
			Return Me.GetTable(Of User)
		End Get
	End Property
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.AJBoktipsCRUD")>  _
	Public Function AJBoktipsCRUD(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal typ As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="TipID", DbType:="Int")> ByVal tipID As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="NVarChar(50)")> ByVal title As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Bookid", DbType:="Int")> ByVal bookid As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Author", DbType:="NVarChar(50)")> ByVal author As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="HighAge", DbType:="Int")> ByVal highAge As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="LowAge", DbType:="Int")> ByVal lowAge As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Review", DbType:="NVarChar(50)")> ByVal review As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="UserName", DbType:="NVarChar(50)")> ByVal userName As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Userage", DbType:="Int")> ByVal userage As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal tiptype As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Userids", DbType:="Int")> ByVal userids As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Approved", DbType:="Int")> ByVal approved As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Category", DbType:="Int")> ByVal category As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Inserted", DbType:="Date")> ByVal inserted As System.Nullable(Of Date)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), typ, tipID, title, bookid, author, highAge, lowAge, review, userName, userage, tiptype, userids, approved, category, inserted)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.AJBoktipsGet")>  _
	Public Function AJBoktipsGet(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal typ As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal userId As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal bookId As System.Nullable(Of Integer)) As ISingleResult(Of AJBoktipsGetResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), typ, userId, bookId)
		Return CType(result.ReturnValue,ISingleResult(Of AJBoktipsGetResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.AjBoktipsTitleToBookid")>  _
	Public Function AjBoktipsTitleToBookid(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(200)")> ByVal title As String) As ISingleResult(Of AjBoktipsTitleToBookidResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), title)
		Return CType(result.ReturnValue,ISingleResult(Of AjBoktipsTitleToBookidResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.ajKat_BoktipsByAuthor")>  _
	Public Function ajKat_BoktipsByAuthor(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal typ As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(250)")> ByVal forfattare As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal forfID As System.Nullable(Of Integer)) As ISingleResult(Of ajKat_BoktipsByAuthorResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), typ, forfattare, forfID)
		Return CType(result.ReturnValue,ISingleResult(Of ajKat_BoktipsByAuthorResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.ajKat_BoktipsByCategory")>  _
	Public Function ajKat_BoktipsByCategory(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal typ As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="CatName", DbType:="NVarChar(100)")> ByVal catName As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="CatID", DbType:="Int")> ByVal catID As System.Nullable(Of Integer)) As ISingleResult(Of ajKat_BoktipsByCategoryResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), typ, catName, catID)
		Return CType(result.ReturnValue,ISingleResult(Of ajKat_BoktipsByCategoryResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.ajKat_BoktipsByDate")>  _
	Public Function ajKat_BoktipsByDate(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal antal As System.Nullable(Of Integer)) As ISingleResult(Of ajKat_BoktipsByDateResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), antal)
		Return CType(result.ReturnValue,ISingleResult(Of ajKat_BoktipsByDateResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.ajKat_BoktipsByTitle")>  _
	Public Function ajKat_BoktipsByTitle(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal typ As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(250)")> ByVal title As String) As ISingleResult(Of ajKat_BoktipsByTitleResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), typ, title)
		Return CType(result.ReturnValue,ISingleResult(Of ajKat_BoktipsByTitleResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.ajkat_BoktipsByRating")>  _
	Public Function ajkat_BoktipsByRating(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal antal As System.Nullable(Of Integer)) As ISingleResult(Of ajkat_BoktipsByRatingResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), antal)
		Return CType(result.ReturnValue,ISingleResult(Of ajkat_BoktipsByRatingResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.ajkat_BoktipsBookidToISBN")>  _
	Public Function ajkat_BoktipsBookidToISBN(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal bookid As System.Nullable(Of Integer)) As ISingleResult(Of ajkat_BoktipsBookidToISBNResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), bookid)
		Return CType(result.ReturnValue,ISingleResult(Of ajkat_BoktipsBookidToISBNResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.ajKat_BoktipsByAgeIntervall")>  _
	Public Function ajKat_BoktipsByAgeIntervall(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal tal As System.Nullable(Of Integer)) As ISingleResult(Of ajKat_BoktipsByAgeIntervallResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), tal)
		Return CType(result.ReturnValue,ISingleResult(Of ajKat_BoktipsByAgeIntervallResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.AJBoktipsTitleList")>  _
	Public Function AJBoktipsTitleList() As ISingleResult(Of AJBoktipsTitleListResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo))
		Return CType(result.ReturnValue,ISingleResult(Of AJBoktipsTitleListResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.AJBoktipsApprove")>  _
	Public Function AJBoktipsApprove(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal typ As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="TipID", DbType:="Int")> ByVal tipID As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Approved", DbType:="Int")> ByVal approved As System.Nullable(Of Integer)) As ISingleResult(Of AJBoktipsApproveResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), typ, tipID, approved)
		Return CType(result.ReturnValue,ISingleResult(Of AJBoktipsApproveResult))
	End Function
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblAJBookTip")>  _
Partial Public Class tblAJBookTip
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _TipID As Integer
	
	Private _Title As String
	
	Private _Bookid As System.Nullable(Of Integer)
	
	Private _Author As String
	
	Private _HighAge As System.Nullable(Of Integer)
	
	Private _LowAge As System.Nullable(Of Integer)
	
	Private _Review As String
	
	Private _UserName As String
	
	Private _Userid As System.Nullable(Of Integer)
	
	Private _Approved As System.Nullable(Of Integer)
	
	Private _Category As String
	
	Private _Inserted As System.Nullable(Of Date)
	
	Private _tiptype As System.Nullable(Of Integer)
	
	Private _userage As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnTipIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnTipIDChanged()
    End Sub
    Partial Private Sub OnTitleChanging(value As String)
    End Sub
    Partial Private Sub OnTitleChanged()
    End Sub
    Partial Private Sub OnBookidChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBookidChanged()
    End Sub
    Partial Private Sub OnAuthorChanging(value As String)
    End Sub
    Partial Private Sub OnAuthorChanged()
    End Sub
    Partial Private Sub OnHighAgeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnHighAgeChanged()
    End Sub
    Partial Private Sub OnLowAgeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLowAgeChanged()
    End Sub
    Partial Private Sub OnReviewChanging(value As String)
    End Sub
    Partial Private Sub OnReviewChanged()
    End Sub
    Partial Private Sub OnUserNameChanging(value As String)
    End Sub
    Partial Private Sub OnUserNameChanged()
    End Sub
    Partial Private Sub OnUseridChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnUseridChanged()
    End Sub
    Partial Private Sub OnApprovedChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnApprovedChanged()
    End Sub
    Partial Private Sub OnCategoryChanging(value As String)
    End Sub
    Partial Private Sub OnCategoryChanged()
    End Sub
    Partial Private Sub OnInsertedChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnInsertedChanged()
    End Sub
    Partial Private Sub OntiptypeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OntiptypeChanged()
    End Sub
    Partial Private Sub OnuserageChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnuserageChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TipID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property TipID() As Integer
		Get
			Return Me._TipID
		End Get
		Set
			If ((Me._TipID = value)  _
						= false) Then
				Me.OnTipIDChanging(value)
				Me.SendPropertyChanging
				Me._TipID = value
				Me.SendPropertyChanged("TipID")
				Me.OnTipIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Title", DbType:="NVarChar(50)")>  _
	Public Property Title() As String
		Get
			Return Me._Title
		End Get
		Set
			If (String.Equals(Me._Title, value) = false) Then
				Me.OnTitleChanging(value)
				Me.SendPropertyChanging
				Me._Title = value
				Me.SendPropertyChanged("Title")
				Me.OnTitleChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Bookid", DbType:="Int")>  _
	Public Property Bookid() As System.Nullable(Of Integer)
		Get
			Return Me._Bookid
		End Get
		Set
			If (Me._Bookid.Equals(value) = false) Then
				Me.OnBookidChanging(value)
				Me.SendPropertyChanging
				Me._Bookid = value
				Me.SendPropertyChanged("Bookid")
				Me.OnBookidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Author", DbType:="NVarChar(50)")>  _
	Public Property Author() As String
		Get
			Return Me._Author
		End Get
		Set
			If (String.Equals(Me._Author, value) = false) Then
				Me.OnAuthorChanging(value)
				Me.SendPropertyChanging
				Me._Author = value
				Me.SendPropertyChanged("Author")
				Me.OnAuthorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HighAge", DbType:="Int")>  _
	Public Property HighAge() As System.Nullable(Of Integer)
		Get
			Return Me._HighAge
		End Get
		Set
			If (Me._HighAge.Equals(value) = false) Then
				Me.OnHighAgeChanging(value)
				Me.SendPropertyChanging
				Me._HighAge = value
				Me.SendPropertyChanged("HighAge")
				Me.OnHighAgeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LowAge", DbType:="Int")>  _
	Public Property LowAge() As System.Nullable(Of Integer)
		Get
			Return Me._LowAge
		End Get
		Set
			If (Me._LowAge.Equals(value) = false) Then
				Me.OnLowAgeChanging(value)
				Me.SendPropertyChanging
				Me._LowAge = value
				Me.SendPropertyChanged("LowAge")
				Me.OnLowAgeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Review", DbType:="NVarChar(4000)")>  _
	Public Property Review() As String
		Get
			Return Me._Review
		End Get
		Set
			If (String.Equals(Me._Review, value) = false) Then
				Me.OnReviewChanging(value)
				Me.SendPropertyChanging
				Me._Review = value
				Me.SendPropertyChanged("Review")
				Me.OnReviewChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserName", DbType:="NVarChar(50)")>  _
	Public Property UserName() As String
		Get
			Return Me._UserName
		End Get
		Set
			If (String.Equals(Me._UserName, value) = false) Then
				Me.OnUserNameChanging(value)
				Me.SendPropertyChanging
				Me._UserName = value
				Me.SendPropertyChanged("UserName")
				Me.OnUserNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Userid", DbType:="Int")>  _
	Public Property Userid() As System.Nullable(Of Integer)
		Get
			Return Me._Userid
		End Get
		Set
			If (Me._Userid.Equals(value) = false) Then
				Me.OnUseridChanging(value)
				Me.SendPropertyChanging
				Me._Userid = value
				Me.SendPropertyChanged("Userid")
				Me.OnUseridChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Approved", DbType:="Int")>  _
	Public Property Approved() As System.Nullable(Of Integer)
		Get
			Return Me._Approved
		End Get
		Set
			If (Me._Approved.Equals(value) = false) Then
				Me.OnApprovedChanging(value)
				Me.SendPropertyChanging
				Me._Approved = value
				Me.SendPropertyChanged("Approved")
				Me.OnApprovedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Category", DbType:="NVarChar(200)")>  _
	Public Property Category() As String
		Get
			Return Me._Category
		End Get
		Set
			If (String.Equals(Me._Category, value) = false) Then
				Me.OnCategoryChanging(value)
				Me.SendPropertyChanging
				Me._Category = value
				Me.SendPropertyChanged("Category")
				Me.OnCategoryChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Inserted", DbType:="Date")>  _
	Public Property Inserted() As System.Nullable(Of Date)
		Get
			Return Me._Inserted
		End Get
		Set
			If (Me._Inserted.Equals(value) = false) Then
				Me.OnInsertedChanging(value)
				Me.SendPropertyChanging
				Me._Inserted = value
				Me.SendPropertyChanged("Inserted")
				Me.OnInsertedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tiptype", DbType:="Int")>  _
	Public Property tiptype() As System.Nullable(Of Integer)
		Get
			Return Me._tiptype
		End Get
		Set
			If (Me._tiptype.Equals(value) = false) Then
				Me.OntiptypeChanging(value)
				Me.SendPropertyChanging
				Me._tiptype = value
				Me.SendPropertyChanged("tiptype")
				Me.OntiptypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_userage", DbType:="Int")>  _
	Public Property userage() As System.Nullable(Of Integer)
		Get
			Return Me._userage
		End Get
		Set
			If (Me._userage.Equals(value) = false) Then
				Me.OnuserageChanging(value)
				Me.SendPropertyChanging
				Me._userage = value
				Me.SendPropertyChanged("userage")
				Me.OnuserageChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblAjKatalogBooks")>  _
Partial Public Class tblAjKatalogBook
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _bookID As Integer
	
	Private _ModuleID As System.Nullable(Of Integer)
	
	Private _Version As System.Nullable(Of Long)
	
	Private _isbn As String
	
	Private _UserID As System.Nullable(Of Integer)
	
	Private _PublisherID As System.Nullable(Of Integer)
	
	Private _Inserted As System.Nullable(Of Date)
	
	Private _Changed As System.Nullable(Of Date)
	
	Private _Deleted As System.Nullable(Of Date)
	
	Private _Title As String
	
	Private _Subtitle As String
	
	Private _Serie As String
	
	Private _Serienr As String
	
	Private _Pages As System.Nullable(Of Integer)
	
	Private _Price As String
	
	Private _Language As String
	
	Private _Information As String
	
	Private _Synopsis As String
	
	Private _Published As String
	
	Private _presentation As String
	
	Private _presentationlink As String
	
	Private _ebooklink As String
	
	Private _newcopy As System.Nullable(Of Integer)
	
	Private _inserter As String
	
	Private _Lektor As System.Nullable(Of Integer)
	
	Private _TotVotes As System.Nullable(Of Integer)
	
	Private _Status As System.Nullable(Of Integer)
	
	Private _Bokjuryn As System.Nullable(Of Integer)
	
	Private _Easyread As System.Nullable(Of Integer)
	
	Private _SSMA_TimeStamp As System.Data.Linq.Binary
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnbookIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnbookIDChanged()
    End Sub
    Partial Private Sub OnModuleIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnModuleIDChanged()
    End Sub
    Partial Private Sub OnVersionChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnVersionChanged()
    End Sub
    Partial Private Sub OnisbnChanging(value As String)
    End Sub
    Partial Private Sub OnisbnChanged()
    End Sub
    Partial Private Sub OnUserIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnUserIDChanged()
    End Sub
    Partial Private Sub OnPublisherIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPublisherIDChanged()
    End Sub
    Partial Private Sub OnInsertedChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnInsertedChanged()
    End Sub
    Partial Private Sub OnChangedChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnChangedChanged()
    End Sub
    Partial Private Sub OnDeletedChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDeletedChanged()
    End Sub
    Partial Private Sub OnTitleChanging(value As String)
    End Sub
    Partial Private Sub OnTitleChanged()
    End Sub
    Partial Private Sub OnSubtitleChanging(value As String)
    End Sub
    Partial Private Sub OnSubtitleChanged()
    End Sub
    Partial Private Sub OnSerieChanging(value As String)
    End Sub
    Partial Private Sub OnSerieChanged()
    End Sub
    Partial Private Sub OnSerienrChanging(value As String)
    End Sub
    Partial Private Sub OnSerienrChanged()
    End Sub
    Partial Private Sub OnPagesChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPagesChanged()
    End Sub
    Partial Private Sub OnPriceChanging(value As String)
    End Sub
    Partial Private Sub OnPriceChanged()
    End Sub
    Partial Private Sub OnLanguageChanging(value As String)
    End Sub
    Partial Private Sub OnLanguageChanged()
    End Sub
    Partial Private Sub OnInformationChanging(value As String)
    End Sub
    Partial Private Sub OnInformationChanged()
    End Sub
    Partial Private Sub OnSynopsisChanging(value As String)
    End Sub
    Partial Private Sub OnSynopsisChanged()
    End Sub
    Partial Private Sub OnPublishedChanging(value As String)
    End Sub
    Partial Private Sub OnPublishedChanged()
    End Sub
    Partial Private Sub OnpresentationChanging(value As String)
    End Sub
    Partial Private Sub OnpresentationChanged()
    End Sub
    Partial Private Sub OnpresentationlinkChanging(value As String)
    End Sub
    Partial Private Sub OnpresentationlinkChanged()
    End Sub
    Partial Private Sub OnebooklinkChanging(value As String)
    End Sub
    Partial Private Sub OnebooklinkChanged()
    End Sub
    Partial Private Sub OnnewcopyChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnnewcopyChanged()
    End Sub
    Partial Private Sub OninserterChanging(value As String)
    End Sub
    Partial Private Sub OninserterChanged()
    End Sub
    Partial Private Sub OnLektorChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLektorChanged()
    End Sub
    Partial Private Sub OnTotVotesChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTotVotesChanged()
    End Sub
    Partial Private Sub OnStatusChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnStatusChanged()
    End Sub
    Partial Private Sub OnBokjurynChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBokjurynChanged()
    End Sub
    Partial Private Sub OnEasyreadChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnEasyreadChanged()
    End Sub
    Partial Private Sub OnSSMA_TimeStampChanging(value As System.Data.Linq.Binary)
    End Sub
    Partial Private Sub OnSSMA_TimeStampChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bookID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property bookID() As Integer
		Get
			Return Me._bookID
		End Get
		Set
			If ((Me._bookID = value)  _
						= false) Then
				Me.OnbookIDChanging(value)
				Me.SendPropertyChanging
				Me._bookID = value
				Me.SendPropertyChanged("bookID")
				Me.OnbookIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModuleID", DbType:="Int", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property ModuleID() As System.Nullable(Of Integer)
		Get
			Return Me._ModuleID
		End Get
		Set
			If (Me._ModuleID.Equals(value) = false) Then
				Me.OnModuleIDChanging(value)
				Me.SendPropertyChanging
				Me._ModuleID = value
				Me.SendPropertyChanged("ModuleID")
				Me.OnModuleIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Version", DbType:="BigInt", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Version() As System.Nullable(Of Long)
		Get
			Return Me._Version
		End Get
		Set
			If (Me._Version.Equals(value) = false) Then
				Me.OnVersionChanging(value)
				Me.SendPropertyChanging
				Me._Version = value
				Me.SendPropertyChanged("Version")
				Me.OnVersionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_isbn", DbType:="NVarChar(255)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property isbn() As String
		Get
			Return Me._isbn
		End Get
		Set
			If (String.Equals(Me._isbn, value) = false) Then
				Me.OnisbnChanging(value)
				Me.SendPropertyChanging
				Me._isbn = value
				Me.SendPropertyChanged("isbn")
				Me.OnisbnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserID", DbType:="Int", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property UserID() As System.Nullable(Of Integer)
		Get
			Return Me._UserID
		End Get
		Set
			If (Me._UserID.Equals(value) = false) Then
				Me.OnUserIDChanging(value)
				Me.SendPropertyChanging
				Me._UserID = value
				Me.SendPropertyChanged("UserID")
				Me.OnUserIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PublisherID", DbType:="Int", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property PublisherID() As System.Nullable(Of Integer)
		Get
			Return Me._PublisherID
		End Get
		Set
			If (Me._PublisherID.Equals(value) = false) Then
				Me.OnPublisherIDChanging(value)
				Me.SendPropertyChanging
				Me._PublisherID = value
				Me.SendPropertyChanged("PublisherID")
				Me.OnPublisherIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Inserted", DbType:="DateTime", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Inserted() As System.Nullable(Of Date)
		Get
			Return Me._Inserted
		End Get
		Set
			If (Me._Inserted.Equals(value) = false) Then
				Me.OnInsertedChanging(value)
				Me.SendPropertyChanging
				Me._Inserted = value
				Me.SendPropertyChanged("Inserted")
				Me.OnInsertedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Changed", DbType:="DateTime", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Changed() As System.Nullable(Of Date)
		Get
			Return Me._Changed
		End Get
		Set
			If (Me._Changed.Equals(value) = false) Then
				Me.OnChangedChanging(value)
				Me.SendPropertyChanging
				Me._Changed = value
				Me.SendPropertyChanged("Changed")
				Me.OnChangedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Deleted", DbType:="DateTime", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Deleted() As System.Nullable(Of Date)
		Get
			Return Me._Deleted
		End Get
		Set
			If (Me._Deleted.Equals(value) = false) Then
				Me.OnDeletedChanging(value)
				Me.SendPropertyChanging
				Me._Deleted = value
				Me.SendPropertyChanged("Deleted")
				Me.OnDeletedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Title", DbType:="NVarChar(255)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Title() As String
		Get
			Return Me._Title
		End Get
		Set
			If (String.Equals(Me._Title, value) = false) Then
				Me.OnTitleChanging(value)
				Me.SendPropertyChanging
				Me._Title = value
				Me.SendPropertyChanged("Title")
				Me.OnTitleChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Subtitle", DbType:="NVarChar(255)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Subtitle() As String
		Get
			Return Me._Subtitle
		End Get
		Set
			If (String.Equals(Me._Subtitle, value) = false) Then
				Me.OnSubtitleChanging(value)
				Me.SendPropertyChanging
				Me._Subtitle = value
				Me.SendPropertyChanged("Subtitle")
				Me.OnSubtitleChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Serie", DbType:="NVarChar(255)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Serie() As String
		Get
			Return Me._Serie
		End Get
		Set
			If (String.Equals(Me._Serie, value) = false) Then
				Me.OnSerieChanging(value)
				Me.SendPropertyChanging
				Me._Serie = value
				Me.SendPropertyChanged("Serie")
				Me.OnSerieChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Serienr", DbType:="NVarChar(255)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Serienr() As String
		Get
			Return Me._Serienr
		End Get
		Set
			If (String.Equals(Me._Serienr, value) = false) Then
				Me.OnSerienrChanging(value)
				Me.SendPropertyChanging
				Me._Serienr = value
				Me.SendPropertyChanged("Serienr")
				Me.OnSerienrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Pages", DbType:="Int", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Pages() As System.Nullable(Of Integer)
		Get
			Return Me._Pages
		End Get
		Set
			If (Me._Pages.Equals(value) = false) Then
				Me.OnPagesChanging(value)
				Me.SendPropertyChanging
				Me._Pages = value
				Me.SendPropertyChanged("Pages")
				Me.OnPagesChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Price", DbType:="NVarChar(50)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Price() As String
		Get
			Return Me._Price
		End Get
		Set
			If (String.Equals(Me._Price, value) = false) Then
				Me.OnPriceChanging(value)
				Me.SendPropertyChanging
				Me._Price = value
				Me.SendPropertyChanged("Price")
				Me.OnPriceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Language", DbType:="NVarChar(50)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Language() As String
		Get
			Return Me._Language
		End Get
		Set
			If (String.Equals(Me._Language, value) = false) Then
				Me.OnLanguageChanging(value)
				Me.SendPropertyChanging
				Me._Language = value
				Me.SendPropertyChanged("Language")
				Me.OnLanguageChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Information", DbType:="NVarChar(2000)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Information() As String
		Get
			Return Me._Information
		End Get
		Set
			If (String.Equals(Me._Information, value) = false) Then
				Me.OnInformationChanging(value)
				Me.SendPropertyChanging
				Me._Information = value
				Me.SendPropertyChanged("Information")
				Me.OnInformationChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Synopsis", DbType:="NVarChar(MAX)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Synopsis() As String
		Get
			Return Me._Synopsis
		End Get
		Set
			If (String.Equals(Me._Synopsis, value) = false) Then
				Me.OnSynopsisChanging(value)
				Me.SendPropertyChanging
				Me._Synopsis = value
				Me.SendPropertyChanged("Synopsis")
				Me.OnSynopsisChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Published", DbType:="NVarChar(50)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Published() As String
		Get
			Return Me._Published
		End Get
		Set
			If (String.Equals(Me._Published, value) = false) Then
				Me.OnPublishedChanging(value)
				Me.SendPropertyChanging
				Me._Published = value
				Me.SendPropertyChanged("Published")
				Me.OnPublishedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_presentation", DbType:="NVarChar(MAX)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property presentation() As String
		Get
			Return Me._presentation
		End Get
		Set
			If (String.Equals(Me._presentation, value) = false) Then
				Me.OnpresentationChanging(value)
				Me.SendPropertyChanging
				Me._presentation = value
				Me.SendPropertyChanged("presentation")
				Me.OnpresentationChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_presentationlink", DbType:="NVarChar(200)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property presentationlink() As String
		Get
			Return Me._presentationlink
		End Get
		Set
			If (String.Equals(Me._presentationlink, value) = false) Then
				Me.OnpresentationlinkChanging(value)
				Me.SendPropertyChanging
				Me._presentationlink = value
				Me.SendPropertyChanged("presentationlink")
				Me.OnpresentationlinkChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ebooklink", DbType:="NVarChar(200)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property ebooklink() As String
		Get
			Return Me._ebooklink
		End Get
		Set
			If (String.Equals(Me._ebooklink, value) = false) Then
				Me.OnebooklinkChanging(value)
				Me.SendPropertyChanging
				Me._ebooklink = value
				Me.SendPropertyChanged("ebooklink")
				Me.OnebooklinkChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_newcopy", DbType:="Int", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property newcopy() As System.Nullable(Of Integer)
		Get
			Return Me._newcopy
		End Get
		Set
			If (Me._newcopy.Equals(value) = false) Then
				Me.OnnewcopyChanging(value)
				Me.SendPropertyChanging
				Me._newcopy = value
				Me.SendPropertyChanged("newcopy")
				Me.OnnewcopyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_inserter", DbType:="NVarChar(50)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property inserter() As String
		Get
			Return Me._inserter
		End Get
		Set
			If (String.Equals(Me._inserter, value) = false) Then
				Me.OninserterChanging(value)
				Me.SendPropertyChanging
				Me._inserter = value
				Me.SendPropertyChanged("inserter")
				Me.OninserterChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Lektor", DbType:="Int", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Lektor() As System.Nullable(Of Integer)
		Get
			Return Me._Lektor
		End Get
		Set
			If (Me._Lektor.Equals(value) = false) Then
				Me.OnLektorChanging(value)
				Me.SendPropertyChanging
				Me._Lektor = value
				Me.SendPropertyChanged("Lektor")
				Me.OnLektorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TotVotes", DbType:="Int", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property TotVotes() As System.Nullable(Of Integer)
		Get
			Return Me._TotVotes
		End Get
		Set
			If (Me._TotVotes.Equals(value) = false) Then
				Me.OnTotVotesChanging(value)
				Me.SendPropertyChanging
				Me._TotVotes = value
				Me.SendPropertyChanged("TotVotes")
				Me.OnTotVotesChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Status", DbType:="Int", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Status() As System.Nullable(Of Integer)
		Get
			Return Me._Status
		End Get
		Set
			If (Me._Status.Equals(value) = false) Then
				Me.OnStatusChanging(value)
				Me.SendPropertyChanging
				Me._Status = value
				Me.SendPropertyChanged("Status")
				Me.OnStatusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Bokjuryn", DbType:="Int", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Bokjuryn() As System.Nullable(Of Integer)
		Get
			Return Me._Bokjuryn
		End Get
		Set
			If (Me._Bokjuryn.Equals(value) = false) Then
				Me.OnBokjurynChanging(value)
				Me.SendPropertyChanging
				Me._Bokjuryn = value
				Me.SendPropertyChanged("Bokjuryn")
				Me.OnBokjurynChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Easyread", DbType:="Int", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Easyread() As System.Nullable(Of Integer)
		Get
			Return Me._Easyread
		End Get
		Set
			If (Me._Easyread.Equals(value) = false) Then
				Me.OnEasyreadChanging(value)
				Me.SendPropertyChanging
				Me._Easyread = value
				Me.SendPropertyChanged("Easyread")
				Me.OnEasyreadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SSMA_TimeStamp", AutoSync:=AutoSync.Always, DbType:="rowversion NOT NULL", CanBeNull:=false, IsDbGenerated:=true, IsVersion:=true, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property SSMA_TimeStamp() As System.Data.Linq.Binary
		Get
			Return Me._SSMA_TimeStamp
		End Get
		Set
			If (Object.Equals(Me._SSMA_TimeStamp, value) = false) Then
				Me.OnSSMA_TimeStampChanging(value)
				Me.SendPropertyChanging
				Me._SSMA_TimeStamp = value
				Me.SendPropertyChanged("SSMA_TimeStamp")
				Me.OnSSMA_TimeStampChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Users")>  _
Partial Public Class User
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _UserID As Integer
	
	Private _Username As String
	
	Private _FirstName As String
	
	Private _LastName As String
	
	Private _IsSuperUser As Boolean
	
	Private _AffiliateId As System.Nullable(Of Integer)
	
	Private _Email As String
	
	Private _DisplayName As String
	
	Private _UpdatePassword As Boolean
	
	Private _LastIPAddress As String
	
	Private _IsDeleted As Boolean
	
	Private _CreatedByUserID As System.Nullable(Of Integer)
	
	Private _CreatedOnDate As System.Nullable(Of Date)
	
	Private _LastModifiedByUserID As System.Nullable(Of Integer)
	
	Private _LastModifiedOnDate As System.Nullable(Of Date)
	
	Private _PasswordResetToken As System.Nullable(Of System.Guid)
	
	Private _PasswordResetExpiration As System.Nullable(Of Date)
	
	Private _LowerEmail As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnUserIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnUserIDChanged()
    End Sub
    Partial Private Sub OnUsernameChanging(value As String)
    End Sub
    Partial Private Sub OnUsernameChanged()
    End Sub
    Partial Private Sub OnFirstNameChanging(value As String)
    End Sub
    Partial Private Sub OnFirstNameChanged()
    End Sub
    Partial Private Sub OnLastNameChanging(value As String)
    End Sub
    Partial Private Sub OnLastNameChanged()
    End Sub
    Partial Private Sub OnIsSuperUserChanging(value As Boolean)
    End Sub
    Partial Private Sub OnIsSuperUserChanged()
    End Sub
    Partial Private Sub OnAffiliateIdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnAffiliateIdChanged()
    End Sub
    Partial Private Sub OnEmailChanging(value As String)
    End Sub
    Partial Private Sub OnEmailChanged()
    End Sub
    Partial Private Sub OnDisplayNameChanging(value As String)
    End Sub
    Partial Private Sub OnDisplayNameChanged()
    End Sub
    Partial Private Sub OnUpdatePasswordChanging(value As Boolean)
    End Sub
    Partial Private Sub OnUpdatePasswordChanged()
    End Sub
    Partial Private Sub OnLastIPAddressChanging(value As String)
    End Sub
    Partial Private Sub OnLastIPAddressChanged()
    End Sub
    Partial Private Sub OnIsDeletedChanging(value As Boolean)
    End Sub
    Partial Private Sub OnIsDeletedChanged()
    End Sub
    Partial Private Sub OnCreatedByUserIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCreatedByUserIDChanged()
    End Sub
    Partial Private Sub OnCreatedOnDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCreatedOnDateChanged()
    End Sub
    Partial Private Sub OnLastModifiedByUserIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLastModifiedByUserIDChanged()
    End Sub
    Partial Private Sub OnLastModifiedOnDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnLastModifiedOnDateChanged()
    End Sub
    Partial Private Sub OnPasswordResetTokenChanging(value As System.Nullable(Of System.Guid))
    End Sub
    Partial Private Sub OnPasswordResetTokenChanged()
    End Sub
    Partial Private Sub OnPasswordResetExpirationChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnPasswordResetExpirationChanged()
    End Sub
    Partial Private Sub OnLowerEmailChanging(value As String)
    End Sub
    Partial Private Sub OnLowerEmailChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property UserID() As Integer
		Get
			Return Me._UserID
		End Get
		Set
			If ((Me._UserID = value)  _
						= false) Then
				Me.OnUserIDChanging(value)
				Me.SendPropertyChanging
				Me._UserID = value
				Me.SendPropertyChanged("UserID")
				Me.OnUserIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Username", DbType:="NVarChar(100) NOT NULL", CanBeNull:=false)>  _
	Public Property Username() As String
		Get
			Return Me._Username
		End Get
		Set
			If (String.Equals(Me._Username, value) = false) Then
				Me.OnUsernameChanging(value)
				Me.SendPropertyChanging
				Me._Username = value
				Me.SendPropertyChanged("Username")
				Me.OnUsernameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FirstName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property FirstName() As String
		Get
			Return Me._FirstName
		End Get
		Set
			If (String.Equals(Me._FirstName, value) = false) Then
				Me.OnFirstNameChanging(value)
				Me.SendPropertyChanging
				Me._FirstName = value
				Me.SendPropertyChanged("FirstName")
				Me.OnFirstNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LastName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property LastName() As String
		Get
			Return Me._LastName
		End Get
		Set
			If (String.Equals(Me._LastName, value) = false) Then
				Me.OnLastNameChanging(value)
				Me.SendPropertyChanging
				Me._LastName = value
				Me.SendPropertyChanged("LastName")
				Me.OnLastNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsSuperUser", DbType:="Bit NOT NULL")>  _
	Public Property IsSuperUser() As Boolean
		Get
			Return Me._IsSuperUser
		End Get
		Set
			If ((Me._IsSuperUser = value)  _
						= false) Then
				Me.OnIsSuperUserChanging(value)
				Me.SendPropertyChanging
				Me._IsSuperUser = value
				Me.SendPropertyChanged("IsSuperUser")
				Me.OnIsSuperUserChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AffiliateId", DbType:="Int")>  _
	Public Property AffiliateId() As System.Nullable(Of Integer)
		Get
			Return Me._AffiliateId
		End Get
		Set
			If (Me._AffiliateId.Equals(value) = false) Then
				Me.OnAffiliateIdChanging(value)
				Me.SendPropertyChanging
				Me._AffiliateId = value
				Me.SendPropertyChanged("AffiliateId")
				Me.OnAffiliateIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Email", DbType:="NVarChar(256)")>  _
	Public Property Email() As String
		Get
			Return Me._Email
		End Get
		Set
			If (String.Equals(Me._Email, value) = false) Then
				Me.OnEmailChanging(value)
				Me.SendPropertyChanging
				Me._Email = value
				Me.SendPropertyChanged("Email")
				Me.OnEmailChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DisplayName", DbType:="NVarChar(128) NOT NULL", CanBeNull:=false)>  _
	Public Property DisplayName() As String
		Get
			Return Me._DisplayName
		End Get
		Set
			If (String.Equals(Me._DisplayName, value) = false) Then
				Me.OnDisplayNameChanging(value)
				Me.SendPropertyChanging
				Me._DisplayName = value
				Me.SendPropertyChanged("DisplayName")
				Me.OnDisplayNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UpdatePassword", DbType:="Bit NOT NULL")>  _
	Public Property UpdatePassword() As Boolean
		Get
			Return Me._UpdatePassword
		End Get
		Set
			If ((Me._UpdatePassword = value)  _
						= false) Then
				Me.OnUpdatePasswordChanging(value)
				Me.SendPropertyChanging
				Me._UpdatePassword = value
				Me.SendPropertyChanged("UpdatePassword")
				Me.OnUpdatePasswordChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LastIPAddress", DbType:="NVarChar(50)")>  _
	Public Property LastIPAddress() As String
		Get
			Return Me._LastIPAddress
		End Get
		Set
			If (String.Equals(Me._LastIPAddress, value) = false) Then
				Me.OnLastIPAddressChanging(value)
				Me.SendPropertyChanging
				Me._LastIPAddress = value
				Me.SendPropertyChanged("LastIPAddress")
				Me.OnLastIPAddressChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsDeleted", DbType:="Bit NOT NULL")>  _
	Public Property IsDeleted() As Boolean
		Get
			Return Me._IsDeleted
		End Get
		Set
			If ((Me._IsDeleted = value)  _
						= false) Then
				Me.OnIsDeletedChanging(value)
				Me.SendPropertyChanging
				Me._IsDeleted = value
				Me.SendPropertyChanged("IsDeleted")
				Me.OnIsDeletedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreatedByUserID", DbType:="Int")>  _
	Public Property CreatedByUserID() As System.Nullable(Of Integer)
		Get
			Return Me._CreatedByUserID
		End Get
		Set
			If (Me._CreatedByUserID.Equals(value) = false) Then
				Me.OnCreatedByUserIDChanging(value)
				Me.SendPropertyChanging
				Me._CreatedByUserID = value
				Me.SendPropertyChanged("CreatedByUserID")
				Me.OnCreatedByUserIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreatedOnDate", DbType:="DateTime")>  _
	Public Property CreatedOnDate() As System.Nullable(Of Date)
		Get
			Return Me._CreatedOnDate
		End Get
		Set
			If (Me._CreatedOnDate.Equals(value) = false) Then
				Me.OnCreatedOnDateChanging(value)
				Me.SendPropertyChanging
				Me._CreatedOnDate = value
				Me.SendPropertyChanged("CreatedOnDate")
				Me.OnCreatedOnDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LastModifiedByUserID", DbType:="Int")>  _
	Public Property LastModifiedByUserID() As System.Nullable(Of Integer)
		Get
			Return Me._LastModifiedByUserID
		End Get
		Set
			If (Me._LastModifiedByUserID.Equals(value) = false) Then
				Me.OnLastModifiedByUserIDChanging(value)
				Me.SendPropertyChanging
				Me._LastModifiedByUserID = value
				Me.SendPropertyChanged("LastModifiedByUserID")
				Me.OnLastModifiedByUserIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LastModifiedOnDate", DbType:="DateTime")>  _
	Public Property LastModifiedOnDate() As System.Nullable(Of Date)
		Get
			Return Me._LastModifiedOnDate
		End Get
		Set
			If (Me._LastModifiedOnDate.Equals(value) = false) Then
				Me.OnLastModifiedOnDateChanging(value)
				Me.SendPropertyChanging
				Me._LastModifiedOnDate = value
				Me.SendPropertyChanged("LastModifiedOnDate")
				Me.OnLastModifiedOnDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PasswordResetToken", DbType:="UniqueIdentifier")>  _
	Public Property PasswordResetToken() As System.Nullable(Of System.Guid)
		Get
			Return Me._PasswordResetToken
		End Get
		Set
			If (Me._PasswordResetToken.Equals(value) = false) Then
				Me.OnPasswordResetTokenChanging(value)
				Me.SendPropertyChanging
				Me._PasswordResetToken = value
				Me.SendPropertyChanged("PasswordResetToken")
				Me.OnPasswordResetTokenChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PasswordResetExpiration", DbType:="DateTime")>  _
	Public Property PasswordResetExpiration() As System.Nullable(Of Date)
		Get
			Return Me._PasswordResetExpiration
		End Get
		Set
			If (Me._PasswordResetExpiration.Equals(value) = false) Then
				Me.OnPasswordResetExpirationChanging(value)
				Me.SendPropertyChanging
				Me._PasswordResetExpiration = value
				Me.SendPropertyChanged("PasswordResetExpiration")
				Me.OnPasswordResetExpirationChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LowerEmail", AutoSync:=AutoSync.Always, DbType:="NVarChar(256)", IsDbGenerated:=true, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property LowerEmail() As String
		Get
			Return Me._LowerEmail
		End Get
		Set
			If (String.Equals(Me._LowerEmail, value) = false) Then
				Me.OnLowerEmailChanging(value)
				Me.SendPropertyChanging
				Me._LowerEmail = value
				Me.SendPropertyChanged("LowerEmail")
				Me.OnLowerEmailChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

Partial Public Class AJBoktipsGetResult
	
	Private _TipID As Integer
	
	Private _Title As String
	
	Private _Bookid As System.Nullable(Of Integer)
	
	Private _Author As String
	
	Private _HighAge As System.Nullable(Of Integer)
	
	Private _LowAge As System.Nullable(Of Integer)
	
	Private _Review As String
	
	Private _UserName As String
	
	Private _Userage As System.Nullable(Of Integer)
	
	Private _tiptype As System.Nullable(Of Integer)
	
	Private _Userid As System.Nullable(Of Integer)
	
	Private _Approved As System.Nullable(Of Integer)
	
	Private _Category As String
	
	Private _Inserted As System.Nullable(Of Date)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TipID", DbType:="Int NOT NULL")>  _
	Public Property TipID() As Integer
		Get
			Return Me._TipID
		End Get
		Set
			If ((Me._TipID = value)  _
						= false) Then
				Me._TipID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Title", DbType:="NVarChar(50)")>  _
	Public Property Title() As String
		Get
			Return Me._Title
		End Get
		Set
			If (String.Equals(Me._Title, value) = false) Then
				Me._Title = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Bookid", DbType:="Int")>  _
	Public Property Bookid() As System.Nullable(Of Integer)
		Get
			Return Me._Bookid
		End Get
		Set
			If (Me._Bookid.Equals(value) = false) Then
				Me._Bookid = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Author", DbType:="NVarChar(50)")>  _
	Public Property Author() As String
		Get
			Return Me._Author
		End Get
		Set
			If (String.Equals(Me._Author, value) = false) Then
				Me._Author = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HighAge", DbType:="Int")>  _
	Public Property HighAge() As System.Nullable(Of Integer)
		Get
			Return Me._HighAge
		End Get
		Set
			If (Me._HighAge.Equals(value) = false) Then
				Me._HighAge = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LowAge", DbType:="Int")>  _
	Public Property LowAge() As System.Nullable(Of Integer)
		Get
			Return Me._LowAge
		End Get
		Set
			If (Me._LowAge.Equals(value) = false) Then
				Me._LowAge = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Review", DbType:="NVarChar(4000)")>  _
	Public Property Review() As String
		Get
			Return Me._Review
		End Get
		Set
			If (String.Equals(Me._Review, value) = false) Then
				Me._Review = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserName", DbType:="NVarChar(50)")>  _
	Public Property UserName() As String
		Get
			Return Me._UserName
		End Get
		Set
			If (String.Equals(Me._UserName, value) = false) Then
				Me._UserName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Userage", DbType:="Int")>  _
	Public Property Userage() As System.Nullable(Of Integer)
		Get
			Return Me._Userage
		End Get
		Set
			If (Me._Userage.Equals(value) = false) Then
				Me._Userage = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tiptype", DbType:="Int")>  _
	Public Property tiptype() As System.Nullable(Of Integer)
		Get
			Return Me._tiptype
		End Get
		Set
			If (Me._tiptype.Equals(value) = false) Then
				Me._tiptype = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Userid", DbType:="Int")>  _
	Public Property Userid() As System.Nullable(Of Integer)
		Get
			Return Me._Userid
		End Get
		Set
			If (Me._Userid.Equals(value) = false) Then
				Me._Userid = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Approved", DbType:="Int")>  _
	Public Property Approved() As System.Nullable(Of Integer)
		Get
			Return Me._Approved
		End Get
		Set
			If (Me._Approved.Equals(value) = false) Then
				Me._Approved = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Category", DbType:="NVarChar(200)")>  _
	Public Property Category() As String
		Get
			Return Me._Category
		End Get
		Set
			If (String.Equals(Me._Category, value) = false) Then
				Me._Category = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Inserted", DbType:="Date")>  _
	Public Property Inserted() As System.Nullable(Of Date)
		Get
			Return Me._Inserted
		End Get
		Set
			If (Me._Inserted.Equals(value) = false) Then
				Me._Inserted = value
			End If
		End Set
	End Property
End Class

Partial Public Class AjBoktipsTitleToBookidResult
	
	Private _bookID As Integer
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bookID", DbType:="Int NOT NULL")>  _
	Public Property bookID() As Integer
		Get
			Return Me._bookID
		End Get
		Set
			If ((Me._bookID = value)  _
						= false) Then
				Me._bookID = value
			End If
		End Set
	End Property
End Class

Partial Public Class ajKat_BoktipsByAuthorResult
	
	Private _TipID As Integer
	
	Private _Title As String
	
	Private _Bookid As System.Nullable(Of Integer)
	
	Private _Author As String
	
	Private _HighAge As System.Nullable(Of Integer)
	
	Private _LowAge As System.Nullable(Of Integer)
	
	Private _Review As String
	
	Private _UserName As String
	
	Private _Userid As System.Nullable(Of Integer)
	
	Private _Approved As System.Nullable(Of Integer)
	
	Private _Category As String
	
	Private _Inserted As System.Nullable(Of Date)
	
	Private _tiptype As System.Nullable(Of Integer)
	
	Private _userage As System.Nullable(Of Integer)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TipID", DbType:="Int NOT NULL")>  _
	Public Property TipID() As Integer
		Get
			Return Me._TipID
		End Get
		Set
			If ((Me._TipID = value)  _
						= false) Then
				Me._TipID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Title", DbType:="NVarChar(50)")>  _
	Public Property Title() As String
		Get
			Return Me._Title
		End Get
		Set
			If (String.Equals(Me._Title, value) = false) Then
				Me._Title = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Bookid", DbType:="Int")>  _
	Public Property Bookid() As System.Nullable(Of Integer)
		Get
			Return Me._Bookid
		End Get
		Set
			If (Me._Bookid.Equals(value) = false) Then
				Me._Bookid = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Author", DbType:="NVarChar(50)")>  _
	Public Property Author() As String
		Get
			Return Me._Author
		End Get
		Set
			If (String.Equals(Me._Author, value) = false) Then
				Me._Author = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HighAge", DbType:="Int")>  _
	Public Property HighAge() As System.Nullable(Of Integer)
		Get
			Return Me._HighAge
		End Get
		Set
			If (Me._HighAge.Equals(value) = false) Then
				Me._HighAge = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LowAge", DbType:="Int")>  _
	Public Property LowAge() As System.Nullable(Of Integer)
		Get
			Return Me._LowAge
		End Get
		Set
			If (Me._LowAge.Equals(value) = false) Then
				Me._LowAge = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Review", DbType:="NVarChar(4000)")>  _
	Public Property Review() As String
		Get
			Return Me._Review
		End Get
		Set
			If (String.Equals(Me._Review, value) = false) Then
				Me._Review = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserName", DbType:="NVarChar(50)")>  _
	Public Property UserName() As String
		Get
			Return Me._UserName
		End Get
		Set
			If (String.Equals(Me._UserName, value) = false) Then
				Me._UserName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Userid", DbType:="Int")>  _
	Public Property Userid() As System.Nullable(Of Integer)
		Get
			Return Me._Userid
		End Get
		Set
			If (Me._Userid.Equals(value) = false) Then
				Me._Userid = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Approved", DbType:="Int")>  _
	Public Property Approved() As System.Nullable(Of Integer)
		Get
			Return Me._Approved
		End Get
		Set
			If (Me._Approved.Equals(value) = false) Then
				Me._Approved = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Category", DbType:="NVarChar(200)")>  _
	Public Property Category() As String
		Get
			Return Me._Category
		End Get
		Set
			If (String.Equals(Me._Category, value) = false) Then
				Me._Category = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Inserted", DbType:="Date")>  _
	Public Property Inserted() As System.Nullable(Of Date)
		Get
			Return Me._Inserted
		End Get
		Set
			If (Me._Inserted.Equals(value) = false) Then
				Me._Inserted = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tiptype", DbType:="Int")>  _
	Public Property tiptype() As System.Nullable(Of Integer)
		Get
			Return Me._tiptype
		End Get
		Set
			If (Me._tiptype.Equals(value) = false) Then
				Me._tiptype = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_userage", DbType:="Int")>  _
	Public Property userage() As System.Nullable(Of Integer)
		Get
			Return Me._userage
		End Get
		Set
			If (Me._userage.Equals(value) = false) Then
				Me._userage = value
			End If
		End Set
	End Property
End Class

Partial Public Class ajKat_BoktipsByCategoryResult
	
	Private _TipID As Integer
	
	Private _Title As String
	
	Private _Bookid As System.Nullable(Of Integer)
	
	Private _Author As String
	
	Private _HighAge As System.Nullable(Of Integer)
	
	Private _LowAge As System.Nullable(Of Integer)
	
	Private _Review As String
	
	Private _UserName As String
	
	Private _Userid As System.Nullable(Of Integer)
	
	Private _Approved As System.Nullable(Of Integer)
	
	Private _Category As String
	
	Private _Inserted As System.Nullable(Of Date)
	
	Private _tiptype As System.Nullable(Of Integer)
	
	Private _userage As System.Nullable(Of Integer)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TipID", DbType:="Int NOT NULL")>  _
	Public Property TipID() As Integer
		Get
			Return Me._TipID
		End Get
		Set
			If ((Me._TipID = value)  _
						= false) Then
				Me._TipID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Title", DbType:="NVarChar(50)")>  _
	Public Property Title() As String
		Get
			Return Me._Title
		End Get
		Set
			If (String.Equals(Me._Title, value) = false) Then
				Me._Title = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Bookid", DbType:="Int")>  _
	Public Property Bookid() As System.Nullable(Of Integer)
		Get
			Return Me._Bookid
		End Get
		Set
			If (Me._Bookid.Equals(value) = false) Then
				Me._Bookid = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Author", DbType:="NVarChar(60)")>  _
	Public Property Author() As String
		Get
			Return Me._Author
		End Get
		Set
			If (String.Equals(Me._Author, value) = false) Then
				Me._Author = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HighAge", DbType:="Int")>  _
	Public Property HighAge() As System.Nullable(Of Integer)
		Get
			Return Me._HighAge
		End Get
		Set
			If (Me._HighAge.Equals(value) = false) Then
				Me._HighAge = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LowAge", DbType:="Int")>  _
	Public Property LowAge() As System.Nullable(Of Integer)
		Get
			Return Me._LowAge
		End Get
		Set
			If (Me._LowAge.Equals(value) = false) Then
				Me._LowAge = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Review", DbType:="NVarChar(4000)")>  _
	Public Property Review() As String
		Get
			Return Me._Review
		End Get
		Set
			If (String.Equals(Me._Review, value) = false) Then
				Me._Review = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserName", DbType:="NVarChar(50)")>  _
	Public Property UserName() As String
		Get
			Return Me._UserName
		End Get
		Set
			If (String.Equals(Me._UserName, value) = false) Then
				Me._UserName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Userid", DbType:="Int")>  _
	Public Property Userid() As System.Nullable(Of Integer)
		Get
			Return Me._Userid
		End Get
		Set
			If (Me._Userid.Equals(value) = false) Then
				Me._Userid = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Approved", DbType:="Int")>  _
	Public Property Approved() As System.Nullable(Of Integer)
		Get
			Return Me._Approved
		End Get
		Set
			If (Me._Approved.Equals(value) = false) Then
				Me._Approved = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Category", DbType:="NVarChar(200)")>  _
	Public Property Category() As String
		Get
			Return Me._Category
		End Get
		Set
			If (String.Equals(Me._Category, value) = false) Then
				Me._Category = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Inserted", DbType:="Date")>  _
	Public Property Inserted() As System.Nullable(Of Date)
		Get
			Return Me._Inserted
		End Get
		Set
			If (Me._Inserted.Equals(value) = false) Then
				Me._Inserted = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tiptype", DbType:="Int")>  _
	Public Property tiptype() As System.Nullable(Of Integer)
		Get
			Return Me._tiptype
		End Get
		Set
			If (Me._tiptype.Equals(value) = false) Then
				Me._tiptype = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_userage", DbType:="Int")>  _
	Public Property userage() As System.Nullable(Of Integer)
		Get
			Return Me._userage
		End Get
		Set
			If (Me._userage.Equals(value) = false) Then
				Me._userage = value
			End If
		End Set
	End Property
End Class

Partial Public Class ajKat_BoktipsByDateResult
	
	Private _TipID As Integer
	
	Private _Title As String
	
	Private _Bookid As System.Nullable(Of Integer)
	
	Private _Author As String
	
	Private _HighAge As System.Nullable(Of Integer)
	
	Private _LowAge As System.Nullable(Of Integer)
	
	Private _Review As String
	
	Private _UserName As String
	
	Private _Userid As System.Nullable(Of Integer)
	
	Private _Approved As System.Nullable(Of Integer)
	
	Private _Category As String
	
	Private _Inserted As System.Nullable(Of Date)
	
	Private _tiptype As System.Nullable(Of Integer)
	
	Private _userage As System.Nullable(Of Integer)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TipID", DbType:="Int NOT NULL")>  _
	Public Property TipID() As Integer
		Get
			Return Me._TipID
		End Get
		Set
			If ((Me._TipID = value)  _
						= false) Then
				Me._TipID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Title", DbType:="NVarChar(50)")>  _
	Public Property Title() As String
		Get
			Return Me._Title
		End Get
		Set
			If (String.Equals(Me._Title, value) = false) Then
				Me._Title = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Bookid", DbType:="Int")>  _
	Public Property Bookid() As System.Nullable(Of Integer)
		Get
			Return Me._Bookid
		End Get
		Set
			If (Me._Bookid.Equals(value) = false) Then
				Me._Bookid = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Author", DbType:="NVarChar(60)")>  _
	Public Property Author() As String
		Get
			Return Me._Author
		End Get
		Set
			If (String.Equals(Me._Author, value) = false) Then
				Me._Author = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HighAge", DbType:="Int")>  _
	Public Property HighAge() As System.Nullable(Of Integer)
		Get
			Return Me._HighAge
		End Get
		Set
			If (Me._HighAge.Equals(value) = false) Then
				Me._HighAge = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LowAge", DbType:="Int")>  _
	Public Property LowAge() As System.Nullable(Of Integer)
		Get
			Return Me._LowAge
		End Get
		Set
			If (Me._LowAge.Equals(value) = false) Then
				Me._LowAge = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Review", DbType:="NVarChar(4000)")>  _
	Public Property Review() As String
		Get
			Return Me._Review
		End Get
		Set
			If (String.Equals(Me._Review, value) = false) Then
				Me._Review = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserName", DbType:="NVarChar(50)")>  _
	Public Property UserName() As String
		Get
			Return Me._UserName
		End Get
		Set
			If (String.Equals(Me._UserName, value) = false) Then
				Me._UserName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Userid", DbType:="Int")>  _
	Public Property Userid() As System.Nullable(Of Integer)
		Get
			Return Me._Userid
		End Get
		Set
			If (Me._Userid.Equals(value) = false) Then
				Me._Userid = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Approved", DbType:="Int")>  _
	Public Property Approved() As System.Nullable(Of Integer)
		Get
			Return Me._Approved
		End Get
		Set
			If (Me._Approved.Equals(value) = false) Then
				Me._Approved = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Category", DbType:="NVarChar(200)")>  _
	Public Property Category() As String
		Get
			Return Me._Category
		End Get
		Set
			If (String.Equals(Me._Category, value) = false) Then
				Me._Category = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Inserted", DbType:="Date")>  _
	Public Property Inserted() As System.Nullable(Of Date)
		Get
			Return Me._Inserted
		End Get
		Set
			If (Me._Inserted.Equals(value) = false) Then
				Me._Inserted = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tiptype", DbType:="Int")>  _
	Public Property tiptype() As System.Nullable(Of Integer)
		Get
			Return Me._tiptype
		End Get
		Set
			If (Me._tiptype.Equals(value) = false) Then
				Me._tiptype = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_userage", DbType:="Int")>  _
	Public Property userage() As System.Nullable(Of Integer)
		Get
			Return Me._userage
		End Get
		Set
			If (Me._userage.Equals(value) = false) Then
				Me._userage = value
			End If
		End Set
	End Property
End Class

Partial Public Class ajKat_BoktipsByTitleResult
	
	Private _TipID As Integer
	
	Private _Title As String
	
	Private _Bookid As System.Nullable(Of Integer)
	
	Private _Author As String
	
	Private _HighAge As System.Nullable(Of Integer)
	
	Private _LowAge As System.Nullable(Of Integer)
	
	Private _Review As String
	
	Private _UserName As String
	
	Private _Userid As System.Nullable(Of Integer)
	
	Private _Approved As System.Nullable(Of Integer)
	
	Private _Category As String
	
	Private _Inserted As System.Nullable(Of Date)
	
	Private _tiptype As System.Nullable(Of Integer)
	
	Private _userage As System.Nullable(Of Integer)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TipID", DbType:="Int NOT NULL")>  _
	Public Property TipID() As Integer
		Get
			Return Me._TipID
		End Get
		Set
			If ((Me._TipID = value)  _
						= false) Then
				Me._TipID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Title", DbType:="NVarChar(50)")>  _
	Public Property Title() As String
		Get
			Return Me._Title
		End Get
		Set
			If (String.Equals(Me._Title, value) = false) Then
				Me._Title = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Bookid", DbType:="Int")>  _
	Public Property Bookid() As System.Nullable(Of Integer)
		Get
			Return Me._Bookid
		End Get
		Set
			If (Me._Bookid.Equals(value) = false) Then
				Me._Bookid = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Author", DbType:="NVarChar(60)")>  _
	Public Property Author() As String
		Get
			Return Me._Author
		End Get
		Set
			If (String.Equals(Me._Author, value) = false) Then
				Me._Author = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HighAge", DbType:="Int")>  _
	Public Property HighAge() As System.Nullable(Of Integer)
		Get
			Return Me._HighAge
		End Get
		Set
			If (Me._HighAge.Equals(value) = false) Then
				Me._HighAge = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LowAge", DbType:="Int")>  _
	Public Property LowAge() As System.Nullable(Of Integer)
		Get
			Return Me._LowAge
		End Get
		Set
			If (Me._LowAge.Equals(value) = false) Then
				Me._LowAge = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Review", DbType:="NVarChar(4000)")>  _
	Public Property Review() As String
		Get
			Return Me._Review
		End Get
		Set
			If (String.Equals(Me._Review, value) = false) Then
				Me._Review = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserName", DbType:="NVarChar(50)")>  _
	Public Property UserName() As String
		Get
			Return Me._UserName
		End Get
		Set
			If (String.Equals(Me._UserName, value) = false) Then
				Me._UserName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Userid", DbType:="Int")>  _
	Public Property Userid() As System.Nullable(Of Integer)
		Get
			Return Me._Userid
		End Get
		Set
			If (Me._Userid.Equals(value) = false) Then
				Me._Userid = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Approved", DbType:="Int")>  _
	Public Property Approved() As System.Nullable(Of Integer)
		Get
			Return Me._Approved
		End Get
		Set
			If (Me._Approved.Equals(value) = false) Then
				Me._Approved = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Category", DbType:="NVarChar(200)")>  _
	Public Property Category() As String
		Get
			Return Me._Category
		End Get
		Set
			If (String.Equals(Me._Category, value) = false) Then
				Me._Category = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Inserted", DbType:="Date")>  _
	Public Property Inserted() As System.Nullable(Of Date)
		Get
			Return Me._Inserted
		End Get
		Set
			If (Me._Inserted.Equals(value) = false) Then
				Me._Inserted = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tiptype", DbType:="Int")>  _
	Public Property tiptype() As System.Nullable(Of Integer)
		Get
			Return Me._tiptype
		End Get
		Set
			If (Me._tiptype.Equals(value) = false) Then
				Me._tiptype = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_userage", DbType:="Int")>  _
	Public Property userage() As System.Nullable(Of Integer)
		Get
			Return Me._userage
		End Get
		Set
			If (Me._userage.Equals(value) = false) Then
				Me._userage = value
			End If
		End Set
	End Property
End Class

Partial Public Class ajkat_BoktipsByRatingResult
	
	Private _TipID As System.Nullable(Of Integer)
	
	Private _Title As String
	
	Private _Bookid As System.Nullable(Of Integer)
	
	Private _Author As String
	
	Private _HighAge As System.Nullable(Of Integer)
	
	Private _LowAge As System.Nullable(Of Integer)
	
	Private _Review As String
	
	Private _UserName As String
	
	Private _Userid As System.Nullable(Of Integer)
	
	Private _Approved As System.Nullable(Of Integer)
	
	Private _Category As String
	
	Private _Inserted As System.Nullable(Of Date)
	
	Private _tiptype As System.Nullable(Of Integer)
	
	Private _userage As System.Nullable(Of Integer)
	
	Private _Total As System.Nullable(Of Integer)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TipID", DbType:="Int")>  _
	Public Property TipID() As System.Nullable(Of Integer)
		Get
			Return Me._TipID
		End Get
		Set
			If (Me._TipID.Equals(value) = false) Then
				Me._TipID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Title", DbType:="NVarChar(50)")>  _
	Public Property Title() As String
		Get
			Return Me._Title
		End Get
		Set
			If (String.Equals(Me._Title, value) = false) Then
				Me._Title = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Bookid", DbType:="Int")>  _
	Public Property Bookid() As System.Nullable(Of Integer)
		Get
			Return Me._Bookid
		End Get
		Set
			If (Me._Bookid.Equals(value) = false) Then
				Me._Bookid = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Author", DbType:="NVarChar(60)")>  _
	Public Property Author() As String
		Get
			Return Me._Author
		End Get
		Set
			If (String.Equals(Me._Author, value) = false) Then
				Me._Author = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HighAge", DbType:="Int")>  _
	Public Property HighAge() As System.Nullable(Of Integer)
		Get
			Return Me._HighAge
		End Get
		Set
			If (Me._HighAge.Equals(value) = false) Then
				Me._HighAge = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LowAge", DbType:="Int")>  _
	Public Property LowAge() As System.Nullable(Of Integer)
		Get
			Return Me._LowAge
		End Get
		Set
			If (Me._LowAge.Equals(value) = false) Then
				Me._LowAge = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Review", DbType:="NVarChar(4000)")>  _
	Public Property Review() As String
		Get
			Return Me._Review
		End Get
		Set
			If (String.Equals(Me._Review, value) = false) Then
				Me._Review = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserName", DbType:="NVarChar(50)")>  _
	Public Property UserName() As String
		Get
			Return Me._UserName
		End Get
		Set
			If (String.Equals(Me._UserName, value) = false) Then
				Me._UserName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Userid", DbType:="Int")>  _
	Public Property Userid() As System.Nullable(Of Integer)
		Get
			Return Me._Userid
		End Get
		Set
			If (Me._Userid.Equals(value) = false) Then
				Me._Userid = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Approved", DbType:="Int")>  _
	Public Property Approved() As System.Nullable(Of Integer)
		Get
			Return Me._Approved
		End Get
		Set
			If (Me._Approved.Equals(value) = false) Then
				Me._Approved = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Category", DbType:="NVarChar(200)")>  _
	Public Property Category() As String
		Get
			Return Me._Category
		End Get
		Set
			If (String.Equals(Me._Category, value) = false) Then
				Me._Category = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Inserted", DbType:="Date")>  _
	Public Property Inserted() As System.Nullable(Of Date)
		Get
			Return Me._Inserted
		End Get
		Set
			If (Me._Inserted.Equals(value) = false) Then
				Me._Inserted = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tiptype", DbType:="Int")>  _
	Public Property tiptype() As System.Nullable(Of Integer)
		Get
			Return Me._tiptype
		End Get
		Set
			If (Me._tiptype.Equals(value) = false) Then
				Me._tiptype = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_userage", DbType:="Int")>  _
	Public Property userage() As System.Nullable(Of Integer)
		Get
			Return Me._userage
		End Get
		Set
			If (Me._userage.Equals(value) = false) Then
				Me._userage = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Total", DbType:="Int")>  _
	Public Property Total() As System.Nullable(Of Integer)
		Get
			Return Me._Total
		End Get
		Set
			If (Me._Total.Equals(value) = false) Then
				Me._Total = value
			End If
		End Set
	End Property
End Class

Partial Public Class ajkat_BoktipsBookidToISBNResult
	
	Private _isbn As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_isbn", DbType:="NVarChar(255)")>  _
	Public Property isbn() As String
		Get
			Return Me._isbn
		End Get
		Set
			If (String.Equals(Me._isbn, value) = false) Then
				Me._isbn = value
			End If
		End Set
	End Property
End Class

Partial Public Class ajKat_BoktipsByAgeIntervallResult
	
	Private _TipID As Integer
	
	Private _Title As String
	
	Private _Bookid As System.Nullable(Of Integer)
	
	Private _Author As String
	
	Private _LowAge As System.Nullable(Of Integer)
	
	Private _HighAge As System.Nullable(Of Integer)
	
	Private _Review As String
	
	Private _UserName As String
	
	Private _Userid As System.Nullable(Of Integer)
	
	Private _Approved As System.Nullable(Of Integer)
	
	Private _Category As String
	
	Private _Inserted As System.Nullable(Of Date)
	
	Private _tiptype As System.Nullable(Of Integer)
	
	Private _userage As System.Nullable(Of Integer)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TipID", DbType:="Int NOT NULL")>  _
	Public Property TipID() As Integer
		Get
			Return Me._TipID
		End Get
		Set
			If ((Me._TipID = value)  _
						= false) Then
				Me._TipID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Title", DbType:="NVarChar(255)")>  _
	Public Property Title() As String
		Get
			Return Me._Title
		End Get
		Set
			If (String.Equals(Me._Title, value) = false) Then
				Me._Title = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Bookid", DbType:="Int")>  _
	Public Property Bookid() As System.Nullable(Of Integer)
		Get
			Return Me._Bookid
		End Get
		Set
			If (Me._Bookid.Equals(value) = false) Then
				Me._Bookid = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Author", DbType:="NVarChar(60)")>  _
	Public Property Author() As String
		Get
			Return Me._Author
		End Get
		Set
			If (String.Equals(Me._Author, value) = false) Then
				Me._Author = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LowAge", DbType:="Int")>  _
	Public Property LowAge() As System.Nullable(Of Integer)
		Get
			Return Me._LowAge
		End Get
		Set
			If (Me._LowAge.Equals(value) = false) Then
				Me._LowAge = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HighAge", DbType:="Int")>  _
	Public Property HighAge() As System.Nullable(Of Integer)
		Get
			Return Me._HighAge
		End Get
		Set
			If (Me._HighAge.Equals(value) = false) Then
				Me._HighAge = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Review", DbType:="NVarChar(4000)")>  _
	Public Property Review() As String
		Get
			Return Me._Review
		End Get
		Set
			If (String.Equals(Me._Review, value) = false) Then
				Me._Review = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserName", DbType:="NVarChar(50)")>  _
	Public Property UserName() As String
		Get
			Return Me._UserName
		End Get
		Set
			If (String.Equals(Me._UserName, value) = false) Then
				Me._UserName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Userid", DbType:="Int")>  _
	Public Property Userid() As System.Nullable(Of Integer)
		Get
			Return Me._Userid
		End Get
		Set
			If (Me._Userid.Equals(value) = false) Then
				Me._Userid = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Approved", DbType:="Int")>  _
	Public Property Approved() As System.Nullable(Of Integer)
		Get
			Return Me._Approved
		End Get
		Set
			If (Me._Approved.Equals(value) = false) Then
				Me._Approved = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Category", DbType:="NVarChar(200)")>  _
	Public Property Category() As String
		Get
			Return Me._Category
		End Get
		Set
			If (String.Equals(Me._Category, value) = false) Then
				Me._Category = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Inserted", DbType:="Date")>  _
	Public Property Inserted() As System.Nullable(Of Date)
		Get
			Return Me._Inserted
		End Get
		Set
			If (Me._Inserted.Equals(value) = false) Then
				Me._Inserted = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tiptype", DbType:="Int")>  _
	Public Property tiptype() As System.Nullable(Of Integer)
		Get
			Return Me._tiptype
		End Get
		Set
			If (Me._tiptype.Equals(value) = false) Then
				Me._tiptype = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_userage", DbType:="Int")>  _
	Public Property userage() As System.Nullable(Of Integer)
		Get
			Return Me._userage
		End Get
		Set
			If (Me._userage.Equals(value) = false) Then
				Me._userage = value
			End If
		End Set
	End Property
End Class

Partial Public Class AJBoktipsTitleListResult
	
	Private _Title As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Title", DbType:="NVarChar(255)")>  _
	Public Property Title() As String
		Get
			Return Me._Title
		End Get
		Set
			If (String.Equals(Me._Title, value) = false) Then
				Me._Title = value
			End If
		End Set
	End Property
End Class

Partial Public Class AJBoktipsApproveResult
	
	Private _TipID As Integer
	
	Private _Title As String
	
	Private _Bookid As System.Nullable(Of Integer)
	
	Private _Author As String
	
	Private _HighAge As System.Nullable(Of Integer)
	
	Private _LowAge As System.Nullable(Of Integer)
	
	Private _Review As String
	
	Private _UserName As String
	
	Private _Userid As System.Nullable(Of Integer)
	
	Private _Approved As System.Nullable(Of Integer)
	
	Private _Category As String
	
	Private _Inserted As System.Nullable(Of Date)
	
	Private _tiptype As System.Nullable(Of Integer)
	
	Private _userage As System.Nullable(Of Integer)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TipID", DbType:="Int NOT NULL")>  _
	Public Property TipID() As Integer
		Get
			Return Me._TipID
		End Get
		Set
			If ((Me._TipID = value)  _
						= false) Then
				Me._TipID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Title", DbType:="NVarChar(150)")>  _
	Public Property Title() As String
		Get
			Return Me._Title
		End Get
		Set
			If (String.Equals(Me._Title, value) = false) Then
				Me._Title = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Bookid", DbType:="Int")>  _
	Public Property Bookid() As System.Nullable(Of Integer)
		Get
			Return Me._Bookid
		End Get
		Set
			If (Me._Bookid.Equals(value) = false) Then
				Me._Bookid = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Author", DbType:="NVarChar(150)")>  _
	Public Property Author() As String
		Get
			Return Me._Author
		End Get
		Set
			If (String.Equals(Me._Author, value) = false) Then
				Me._Author = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HighAge", DbType:="Int")>  _
	Public Property HighAge() As System.Nullable(Of Integer)
		Get
			Return Me._HighAge
		End Get
		Set
			If (Me._HighAge.Equals(value) = false) Then
				Me._HighAge = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LowAge", DbType:="Int")>  _
	Public Property LowAge() As System.Nullable(Of Integer)
		Get
			Return Me._LowAge
		End Get
		Set
			If (Me._LowAge.Equals(value) = false) Then
				Me._LowAge = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Review", DbType:="VarChar(MAX)")>  _
	Public Property Review() As String
		Get
			Return Me._Review
		End Get
		Set
			If (String.Equals(Me._Review, value) = false) Then
				Me._Review = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserName", DbType:="NVarChar(150)")>  _
	Public Property UserName() As String
		Get
			Return Me._UserName
		End Get
		Set
			If (String.Equals(Me._UserName, value) = false) Then
				Me._UserName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Userid", DbType:="Int")>  _
	Public Property Userid() As System.Nullable(Of Integer)
		Get
			Return Me._Userid
		End Get
		Set
			If (Me._Userid.Equals(value) = false) Then
				Me._Userid = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Approved", DbType:="Int")>  _
	Public Property Approved() As System.Nullable(Of Integer)
		Get
			Return Me._Approved
		End Get
		Set
			If (Me._Approved.Equals(value) = false) Then
				Me._Approved = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Category", DbType:="NVarChar(200)")>  _
	Public Property Category() As String
		Get
			Return Me._Category
		End Get
		Set
			If (String.Equals(Me._Category, value) = false) Then
				Me._Category = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Inserted", DbType:="Date")>  _
	Public Property Inserted() As System.Nullable(Of Date)
		Get
			Return Me._Inserted
		End Get
		Set
			If (Me._Inserted.Equals(value) = false) Then
				Me._Inserted = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tiptype", DbType:="Int")>  _
	Public Property tiptype() As System.Nullable(Of Integer)
		Get
			Return Me._tiptype
		End Get
		Set
			If (Me._tiptype.Equals(value) = false) Then
				Me._tiptype = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_userage", DbType:="Int")>  _
	Public Property userage() As System.Nullable(Of Integer)
		Get
			Return Me._userage
		End Get
		Set
			If (Me._userage.Equals(value) = false) Then
				Me._userage = value
			End If
		End Set
	End Property
End Class
