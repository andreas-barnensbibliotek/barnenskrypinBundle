'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="AJDNNDatabase_v5")>  _
Partial Public Class bibblomoneyLinqDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InserttblAJ_bibblimoneyEarnedLog(instance As tblAJ_bibblimoneyEarnedLog)
    End Sub
  Partial Private Sub UpdatetblAJ_bibblimoneyEarnedLog(instance As tblAJ_bibblimoneyEarnedLog)
    End Sub
  Partial Private Sub DeletetblAJ_bibblimoneyEarnedLog(instance As tblAJ_bibblimoneyEarnedLog)
    End Sub
  Partial Private Sub InserttblAJ_bibblimoneyEarnFunction(instance As tblAJ_bibblimoneyEarnFunction)
    End Sub
  Partial Private Sub UpdatetblAJ_bibblimoneyEarnFunction(instance As tblAJ_bibblimoneyEarnFunction)
    End Sub
  Partial Private Sub DeletetblAJ_bibblimoneyEarnFunction(instance As tblAJ_bibblimoneyEarnFunction)
    End Sub
  Partial Private Sub InserttblAJ_bibblimoneyEarned(instance As tblAJ_bibblimoneyEarned)
    End Sub
  Partial Private Sub UpdatetblAJ_bibblimoneyEarned(instance As tblAJ_bibblimoneyEarned)
    End Sub
  Partial Private Sub DeletetblAJ_bibblimoneyEarned(instance As tblAJ_bibblimoneyEarned)
    End Sub
  Partial Private Sub InserttblAJ_Bank(instance As tblAJ_Bank)
    End Sub
  Partial Private Sub UpdatetblAJ_Bank(instance As tblAJ_Bank)
    End Sub
  Partial Private Sub DeletetblAJ_Bank(instance As tblAJ_Bank)
    End Sub
  Partial Private Sub InserttblAjBokmarkelseGrupper(instance As tblAjBokmarkelseGrupper)
    End Sub
  Partial Private Sub UpdatetblAjBokmarkelseGrupper(instance As tblAjBokmarkelseGrupper)
    End Sub
  Partial Private Sub DeletetblAjBokmarkelseGrupper(instance As tblAjBokmarkelseGrupper)
    End Sub
  Partial Private Sub InserttblAjBokmarkelser(instance As tblAjBokmarkelser)
    End Sub
  Partial Private Sub UpdatetblAjBokmarkelser(instance As tblAjBokmarkelser)
    End Sub
  Partial Private Sub DeletetblAjBokmarkelser(instance As tblAjBokmarkelser)
    End Sub
  Partial Private Sub InserttblAjBokmarkelserPointCounter(instance As tblAjBokmarkelserPointCounter)
    End Sub
  Partial Private Sub UpdatetblAjBokmarkelserPointCounter(instance As tblAjBokmarkelserPointCounter)
    End Sub
  Partial Private Sub DeletetblAjBokmarkelserPointCounter(instance As tblAjBokmarkelserPointCounter)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.BibbloMoney.My.MySettings.Default.AJDNNDatabase_v5ConnectionString1, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property tblAJ_bibblimoneyEarnedLogs() As System.Data.Linq.Table(Of tblAJ_bibblimoneyEarnedLog)
		Get
			Return Me.GetTable(Of tblAJ_bibblimoneyEarnedLog)
		End Get
	End Property
	
	Public ReadOnly Property tblAJ_bibblimoneyEarnFunctions() As System.Data.Linq.Table(Of tblAJ_bibblimoneyEarnFunction)
		Get
			Return Me.GetTable(Of tblAJ_bibblimoneyEarnFunction)
		End Get
	End Property
	
	Public ReadOnly Property tblAJ_bibblimoneyEarneds() As System.Data.Linq.Table(Of tblAJ_bibblimoneyEarned)
		Get
			Return Me.GetTable(Of tblAJ_bibblimoneyEarned)
		End Get
	End Property
	
	Public ReadOnly Property tblAJ_Banks() As System.Data.Linq.Table(Of tblAJ_Bank)
		Get
			Return Me.GetTable(Of tblAJ_Bank)
		End Get
	End Property
	
	Public ReadOnly Property tblAjBokmarkelseGruppers() As System.Data.Linq.Table(Of tblAjBokmarkelseGrupper)
		Get
			Return Me.GetTable(Of tblAjBokmarkelseGrupper)
		End Get
	End Property
	
	Public ReadOnly Property tblAjBokmarkelsers() As System.Data.Linq.Table(Of tblAjBokmarkelser)
		Get
			Return Me.GetTable(Of tblAjBokmarkelser)
		End Get
	End Property
	
	Public ReadOnly Property tblAjBokmarkelserPointCounters() As System.Data.Linq.Table(Of tblAjBokmarkelserPointCounter)
		Get
			Return Me.GetTable(Of tblAjBokmarkelserPointCounter)
		End Get
	End Property
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.AJBibbloMoneyGetEarnFunction")>  _
	Public Function AJBibbloMoneyGetEarnFunction(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal earnfuncid As System.Nullable(Of Integer)) As ISingleResult(Of AJBibbloMoneyGetEarnFunctionResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), earnfuncid)
		Return CType(result.ReturnValue,ISingleResult(Of AJBibbloMoneyGetEarnFunctionResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.ajbokmarkelserPointEarned")>  _
	Public Function ajbokmarkelserPointEarned(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal awardid As System.Nullable(Of Integer)) As ISingleResult(Of ajbokmarkelserPointEarnedResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), awardid)
		Return CType(result.ReturnValue,ISingleResult(Of ajbokmarkelserPointEarnedResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.ajbokmarkelser")>  _
	Public Function ajbokmarkelser(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal typ As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal userid As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal awardid As System.Nullable(Of Integer)) As ISingleResult(Of ajbokmarkelserResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), typ, userid, awardid)
		Return CType(result.ReturnValue,ISingleResult(Of ajbokmarkelserResult))
	End Function
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblAJ_bibblimoneyEarnedLog")>  _
Partial Public Class tblAJ_bibblimoneyEarnedLog
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _BMLogID As Integer
	
	Private _EarnfuncID As System.Nullable(Of Integer)
	
	Private _amount As System.Nullable(Of Integer)
	
	Private _beskrivning As String
	
	Private _userid As System.Nullable(Of Integer)
	
	Private _loggdate As System.Nullable(Of Date)
	
	Private _timestamp As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnBMLogIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnBMLogIDChanged()
    End Sub
    Partial Private Sub OnEarnfuncIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnEarnfuncIDChanged()
    End Sub
    Partial Private Sub OnamountChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnamountChanged()
    End Sub
    Partial Private Sub OnbeskrivningChanging(value As String)
    End Sub
    Partial Private Sub OnbeskrivningChanged()
    End Sub
    Partial Private Sub OnuseridChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnuseridChanged()
    End Sub
    Partial Private Sub OnloggdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnloggdateChanged()
    End Sub
    Partial Private Sub OntimestampChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OntimestampChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BMLogID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property BMLogID() As Integer
		Get
			Return Me._BMLogID
		End Get
		Set
			If ((Me._BMLogID = value)  _
						= false) Then
				Me.OnBMLogIDChanging(value)
				Me.SendPropertyChanging
				Me._BMLogID = value
				Me.SendPropertyChanged("BMLogID")
				Me.OnBMLogIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EarnfuncID", DbType:="Int")>  _
	Public Property EarnfuncID() As System.Nullable(Of Integer)
		Get
			Return Me._EarnfuncID
		End Get
		Set
			If (Me._EarnfuncID.Equals(value) = false) Then
				Me.OnEarnfuncIDChanging(value)
				Me.SendPropertyChanging
				Me._EarnfuncID = value
				Me.SendPropertyChanged("EarnfuncID")
				Me.OnEarnfuncIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amount", DbType:="Int")>  _
	Public Property amount() As System.Nullable(Of Integer)
		Get
			Return Me._amount
		End Get
		Set
			If (Me._amount.Equals(value) = false) Then
				Me.OnamountChanging(value)
				Me.SendPropertyChanging
				Me._amount = value
				Me.SendPropertyChanged("amount")
				Me.OnamountChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_beskrivning", DbType:="NVarChar(150)")>  _
	Public Property beskrivning() As String
		Get
			Return Me._beskrivning
		End Get
		Set
			If (String.Equals(Me._beskrivning, value) = false) Then
				Me.OnbeskrivningChanging(value)
				Me.SendPropertyChanging
				Me._beskrivning = value
				Me.SendPropertyChanged("beskrivning")
				Me.OnbeskrivningChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_userid", DbType:="Int")>  _
	Public Property userid() As System.Nullable(Of Integer)
		Get
			Return Me._userid
		End Get
		Set
			If (Me._userid.Equals(value) = false) Then
				Me.OnuseridChanging(value)
				Me.SendPropertyChanging
				Me._userid = value
				Me.SendPropertyChanged("userid")
				Me.OnuseridChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_loggdate", DbType:="Date")>  _
	Public Property loggdate() As System.Nullable(Of Date)
		Get
			Return Me._loggdate
		End Get
		Set
			If (Me._loggdate.Equals(value) = false) Then
				Me.OnloggdateChanging(value)
				Me.SendPropertyChanging
				Me._loggdate = value
				Me.SendPropertyChanged("loggdate")
				Me.OnloggdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_timestamp", DbType:="DateTime")>  _
	Public Property timestamp() As System.Nullable(Of Date)
		Get
			Return Me._timestamp
		End Get
		Set
			If (Me._timestamp.Equals(value) = false) Then
				Me.OntimestampChanging(value)
				Me.SendPropertyChanging
				Me._timestamp = value
				Me.SendPropertyChanged("timestamp")
				Me.OntimestampChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblAJ_bibblimoneyEarnFunction")>  _
Partial Public Class tblAJ_bibblimoneyEarnFunction
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _EarnfuncID As Integer
	
	Private _EarnFunctionName As String
	
	Private _Beskrivning As String
	
	Private _bonusX As System.Nullable(Of Integer)
	
	Private _bibblomoneyEarnID As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnEarnfuncIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnEarnfuncIDChanged()
    End Sub
    Partial Private Sub OnEarnFunctionNameChanging(value As String)
    End Sub
    Partial Private Sub OnEarnFunctionNameChanged()
    End Sub
    Partial Private Sub OnBeskrivningChanging(value As String)
    End Sub
    Partial Private Sub OnBeskrivningChanged()
    End Sub
    Partial Private Sub OnbonusXChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnbonusXChanged()
    End Sub
    Partial Private Sub OnbibblomoneyEarnIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnbibblomoneyEarnIDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EarnfuncID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property EarnfuncID() As Integer
		Get
			Return Me._EarnfuncID
		End Get
		Set
			If ((Me._EarnfuncID = value)  _
						= false) Then
				Me.OnEarnfuncIDChanging(value)
				Me.SendPropertyChanging
				Me._EarnfuncID = value
				Me.SendPropertyChanged("EarnfuncID")
				Me.OnEarnfuncIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EarnFunctionName", DbType:="NVarChar(150)")>  _
	Public Property EarnFunctionName() As String
		Get
			Return Me._EarnFunctionName
		End Get
		Set
			If (String.Equals(Me._EarnFunctionName, value) = false) Then
				Me.OnEarnFunctionNameChanging(value)
				Me.SendPropertyChanging
				Me._EarnFunctionName = value
				Me.SendPropertyChanged("EarnFunctionName")
				Me.OnEarnFunctionNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Beskrivning", DbType:="NVarChar(250)")>  _
	Public Property Beskrivning() As String
		Get
			Return Me._Beskrivning
		End Get
		Set
			If (String.Equals(Me._Beskrivning, value) = false) Then
				Me.OnBeskrivningChanging(value)
				Me.SendPropertyChanging
				Me._Beskrivning = value
				Me.SendPropertyChanged("Beskrivning")
				Me.OnBeskrivningChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bonusX", DbType:="Int")>  _
	Public Property bonusX() As System.Nullable(Of Integer)
		Get
			Return Me._bonusX
		End Get
		Set
			If (Me._bonusX.Equals(value) = false) Then
				Me.OnbonusXChanging(value)
				Me.SendPropertyChanging
				Me._bonusX = value
				Me.SendPropertyChanged("bonusX")
				Me.OnbonusXChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bibblomoneyEarnID", DbType:="Int")>  _
	Public Property bibblomoneyEarnID() As System.Nullable(Of Integer)
		Get
			Return Me._bibblomoneyEarnID
		End Get
		Set
			If (Me._bibblomoneyEarnID.Equals(value) = false) Then
				Me.OnbibblomoneyEarnIDChanging(value)
				Me.SendPropertyChanging
				Me._bibblomoneyEarnID = value
				Me.SendPropertyChanged("bibblomoneyEarnID")
				Me.OnbibblomoneyEarnIDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblAJ_bibblimoneyEarned")>  _
Partial Public Class tblAJ_bibblimoneyEarned
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _BibblimoneyEarnID As Integer
	
	Private _bibmoney As System.Nullable(Of Integer)
	
	Private _beskrivning As String
	
	Private _bonusX As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnBibblimoneyEarnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnBibblimoneyEarnIDChanged()
    End Sub
    Partial Private Sub OnbibmoneyChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnbibmoneyChanged()
    End Sub
    Partial Private Sub OnbeskrivningChanging(value As String)
    End Sub
    Partial Private Sub OnbeskrivningChanged()
    End Sub
    Partial Private Sub OnbonusXChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnbonusXChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BibblimoneyEarnID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property BibblimoneyEarnID() As Integer
		Get
			Return Me._BibblimoneyEarnID
		End Get
		Set
			If ((Me._BibblimoneyEarnID = value)  _
						= false) Then
				Me.OnBibblimoneyEarnIDChanging(value)
				Me.SendPropertyChanging
				Me._BibblimoneyEarnID = value
				Me.SendPropertyChanged("BibblimoneyEarnID")
				Me.OnBibblimoneyEarnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bibmoney", DbType:="Int")>  _
	Public Property bibmoney() As System.Nullable(Of Integer)
		Get
			Return Me._bibmoney
		End Get
		Set
			If (Me._bibmoney.Equals(value) = false) Then
				Me.OnbibmoneyChanging(value)
				Me.SendPropertyChanging
				Me._bibmoney = value
				Me.SendPropertyChanged("bibmoney")
				Me.OnbibmoneyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_beskrivning", DbType:="NVarChar(250)")>  _
	Public Property beskrivning() As String
		Get
			Return Me._beskrivning
		End Get
		Set
			If (String.Equals(Me._beskrivning, value) = false) Then
				Me.OnbeskrivningChanging(value)
				Me.SendPropertyChanging
				Me._beskrivning = value
				Me.SendPropertyChanged("beskrivning")
				Me.OnbeskrivningChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bonusX", DbType:="Int")>  _
	Public Property bonusX() As System.Nullable(Of Integer)
		Get
			Return Me._bonusX
		End Get
		Set
			If (Me._bonusX.Equals(value) = false) Then
				Me.OnbonusXChanging(value)
				Me.SendPropertyChanging
				Me._bonusX = value
				Me.SendPropertyChanged("bonusX")
				Me.OnbonusXChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblAJ_Bank")>  _
Partial Public Class tblAJ_Bank
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _bankID As Integer
	
	Private _bankUserid As System.Nullable(Of Integer)
	
	Private _Bibmoney As System.Nullable(Of Integer)
	
	Private _BonusX As System.Nullable(Of Integer)
	
	Private _Beskrivning As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnbankIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnbankIDChanged()
    End Sub
    Partial Private Sub OnbankUseridChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnbankUseridChanged()
    End Sub
    Partial Private Sub OnBibmoneyChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBibmoneyChanged()
    End Sub
    Partial Private Sub OnBonusXChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBonusXChanged()
    End Sub
    Partial Private Sub OnBeskrivningChanging(value As String)
    End Sub
    Partial Private Sub OnBeskrivningChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bankID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property bankID() As Integer
		Get
			Return Me._bankID
		End Get
		Set
			If ((Me._bankID = value)  _
						= false) Then
				Me.OnbankIDChanging(value)
				Me.SendPropertyChanging
				Me._bankID = value
				Me.SendPropertyChanged("bankID")
				Me.OnbankIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bankUserid", DbType:="Int")>  _
	Public Property bankUserid() As System.Nullable(Of Integer)
		Get
			Return Me._bankUserid
		End Get
		Set
			If (Me._bankUserid.Equals(value) = false) Then
				Me.OnbankUseridChanging(value)
				Me.SendPropertyChanging
				Me._bankUserid = value
				Me.SendPropertyChanged("bankUserid")
				Me.OnbankUseridChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Bibmoney", DbType:="Int")>  _
	Public Property Bibmoney() As System.Nullable(Of Integer)
		Get
			Return Me._Bibmoney
		End Get
		Set
			If (Me._Bibmoney.Equals(value) = false) Then
				Me.OnBibmoneyChanging(value)
				Me.SendPropertyChanging
				Me._Bibmoney = value
				Me.SendPropertyChanged("Bibmoney")
				Me.OnBibmoneyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BonusX", DbType:="Int")>  _
	Public Property BonusX() As System.Nullable(Of Integer)
		Get
			Return Me._BonusX
		End Get
		Set
			If (Me._BonusX.Equals(value) = false) Then
				Me.OnBonusXChanging(value)
				Me.SendPropertyChanging
				Me._BonusX = value
				Me.SendPropertyChanged("BonusX")
				Me.OnBonusXChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Beskrivning", DbType:="NVarChar(250)")>  _
	Public Property Beskrivning() As String
		Get
			Return Me._Beskrivning
		End Get
		Set
			If (String.Equals(Me._Beskrivning, value) = false) Then
				Me.OnBeskrivningChanging(value)
				Me.SendPropertyChanging
				Me._Beskrivning = value
				Me.SendPropertyChanged("Beskrivning")
				Me.OnBeskrivningChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblAjBokmarkelseGrupper")>  _
Partial Public Class tblAjBokmarkelseGrupper
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _AwardGroupID As Integer
	
	Private _AwardGroup As String
	
	Private _Occures As System.Nullable(Of Integer)
	
	Private _PointEarned As System.Nullable(Of Integer)
	
	Private _ToLevelUp As System.Nullable(Of Integer)
	
	Private _BibblimoneyEarnID As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnAwardGroupIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnAwardGroupIDChanged()
    End Sub
    Partial Private Sub OnAwardGroupChanging(value As String)
    End Sub
    Partial Private Sub OnAwardGroupChanged()
    End Sub
    Partial Private Sub OnOccuresChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnOccuresChanged()
    End Sub
    Partial Private Sub OnPointEarnedChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPointEarnedChanged()
    End Sub
    Partial Private Sub OnToLevelUpChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnToLevelUpChanged()
    End Sub
    Partial Private Sub OnBibblimoneyEarnIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBibblimoneyEarnIDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AwardGroupID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property AwardGroupID() As Integer
		Get
			Return Me._AwardGroupID
		End Get
		Set
			If ((Me._AwardGroupID = value)  _
						= false) Then
				Me.OnAwardGroupIDChanging(value)
				Me.SendPropertyChanging
				Me._AwardGroupID = value
				Me.SendPropertyChanged("AwardGroupID")
				Me.OnAwardGroupIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AwardGroup", DbType:="NVarChar(150)")>  _
	Public Property AwardGroup() As String
		Get
			Return Me._AwardGroup
		End Get
		Set
			If (String.Equals(Me._AwardGroup, value) = false) Then
				Me.OnAwardGroupChanging(value)
				Me.SendPropertyChanging
				Me._AwardGroup = value
				Me.SendPropertyChanged("AwardGroup")
				Me.OnAwardGroupChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Occures", DbType:="Int")>  _
	Public Property Occures() As System.Nullable(Of Integer)
		Get
			Return Me._Occures
		End Get
		Set
			If (Me._Occures.Equals(value) = false) Then
				Me.OnOccuresChanging(value)
				Me.SendPropertyChanging
				Me._Occures = value
				Me.SendPropertyChanged("Occures")
				Me.OnOccuresChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PointEarned", DbType:="Int")>  _
	Public Property PointEarned() As System.Nullable(Of Integer)
		Get
			Return Me._PointEarned
		End Get
		Set
			If (Me._PointEarned.Equals(value) = false) Then
				Me.OnPointEarnedChanging(value)
				Me.SendPropertyChanging
				Me._PointEarned = value
				Me.SendPropertyChanged("PointEarned")
				Me.OnPointEarnedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ToLevelUp", DbType:="Int")>  _
	Public Property ToLevelUp() As System.Nullable(Of Integer)
		Get
			Return Me._ToLevelUp
		End Get
		Set
			If (Me._ToLevelUp.Equals(value) = false) Then
				Me.OnToLevelUpChanging(value)
				Me.SendPropertyChanging
				Me._ToLevelUp = value
				Me.SendPropertyChanged("ToLevelUp")
				Me.OnToLevelUpChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BibblimoneyEarnID", DbType:="Int")>  _
	Public Property BibblimoneyEarnID() As System.Nullable(Of Integer)
		Get
			Return Me._BibblimoneyEarnID
		End Get
		Set
			If (Me._BibblimoneyEarnID.Equals(value) = false) Then
				Me.OnBibblimoneyEarnIDChanging(value)
				Me.SendPropertyChanging
				Me._BibblimoneyEarnID = value
				Me.SendPropertyChanged("BibblimoneyEarnID")
				Me.OnBibblimoneyEarnIDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblAjBokmarkelser")>  _
Partial Public Class tblAjBokmarkelser
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Aid As Integer
	
	Private _Awardname As String
	
	Private _Levels As Integer
	
	Private _Beskrivning As String
	
	Private _Occurs As Integer
	
	Private _Badgesrc As String
	
	Private _Awardgroup As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnAidChanging(value As Integer)
    End Sub
    Partial Private Sub OnAidChanged()
    End Sub
    Partial Private Sub OnAwardnameChanging(value As String)
    End Sub
    Partial Private Sub OnAwardnameChanged()
    End Sub
    Partial Private Sub OnLevelsChanging(value As Integer)
    End Sub
    Partial Private Sub OnLevelsChanged()
    End Sub
    Partial Private Sub OnBeskrivningChanging(value As String)
    End Sub
    Partial Private Sub OnBeskrivningChanged()
    End Sub
    Partial Private Sub OnOccursChanging(value As Integer)
    End Sub
    Partial Private Sub OnOccursChanged()
    End Sub
    Partial Private Sub OnBadgesrcChanging(value As String)
    End Sub
    Partial Private Sub OnBadgesrcChanged()
    End Sub
    Partial Private Sub OnAwardgroupChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnAwardgroupChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Aid", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property Aid() As Integer
		Get
			Return Me._Aid
		End Get
		Set
			If ((Me._Aid = value)  _
						= false) Then
				Me.OnAidChanging(value)
				Me.SendPropertyChanging
				Me._Aid = value
				Me.SendPropertyChanged("Aid")
				Me.OnAidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Awardname", DbType:="NVarChar(100) NOT NULL", CanBeNull:=false)>  _
	Public Property Awardname() As String
		Get
			Return Me._Awardname
		End Get
		Set
			If (String.Equals(Me._Awardname, value) = false) Then
				Me.OnAwardnameChanging(value)
				Me.SendPropertyChanging
				Me._Awardname = value
				Me.SendPropertyChanged("Awardname")
				Me.OnAwardnameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Levels", DbType:="Int NOT NULL")>  _
	Public Property Levels() As Integer
		Get
			Return Me._Levels
		End Get
		Set
			If ((Me._Levels = value)  _
						= false) Then
				Me.OnLevelsChanging(value)
				Me.SendPropertyChanging
				Me._Levels = value
				Me.SendPropertyChanged("Levels")
				Me.OnLevelsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Beskrivning", DbType:="NVarChar(150)")>  _
	Public Property Beskrivning() As String
		Get
			Return Me._Beskrivning
		End Get
		Set
			If (String.Equals(Me._Beskrivning, value) = false) Then
				Me.OnBeskrivningChanging(value)
				Me.SendPropertyChanging
				Me._Beskrivning = value
				Me.SendPropertyChanged("Beskrivning")
				Me.OnBeskrivningChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Occurs", DbType:="Int NOT NULL")>  _
	Public Property Occurs() As Integer
		Get
			Return Me._Occurs
		End Get
		Set
			If ((Me._Occurs = value)  _
						= false) Then
				Me.OnOccursChanging(value)
				Me.SendPropertyChanging
				Me._Occurs = value
				Me.SendPropertyChanged("Occurs")
				Me.OnOccursChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Badgesrc", DbType:="NVarChar(150)")>  _
	Public Property Badgesrc() As String
		Get
			Return Me._Badgesrc
		End Get
		Set
			If (String.Equals(Me._Badgesrc, value) = false) Then
				Me.OnBadgesrcChanging(value)
				Me.SendPropertyChanging
				Me._Badgesrc = value
				Me.SendPropertyChanged("Badgesrc")
				Me.OnBadgesrcChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Awardgroup", DbType:="Int")>  _
	Public Property Awardgroup() As System.Nullable(Of Integer)
		Get
			Return Me._Awardgroup
		End Get
		Set
			If (Me._Awardgroup.Equals(value) = false) Then
				Me.OnAwardgroupChanging(value)
				Me.SendPropertyChanging
				Me._Awardgroup = value
				Me.SendPropertyChanged("Awardgroup")
				Me.OnAwardgroupChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblAjBokmarkelserPointCounter")>  _
Partial Public Class tblAjBokmarkelserPointCounter
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _Userid As Integer
	
	Private _Aid As Integer
	
	Private _Counters As Integer
	
	Private _Levels As Integer
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnUseridChanging(value As Integer)
    End Sub
    Partial Private Sub OnUseridChanged()
    End Sub
    Partial Private Sub OnAidChanging(value As Integer)
    End Sub
    Partial Private Sub OnAidChanged()
    End Sub
    Partial Private Sub OnCountersChanging(value As Integer)
    End Sub
    Partial Private Sub OnCountersChanged()
    End Sub
    Partial Private Sub OnLevelsChanging(value As Integer)
    End Sub
    Partial Private Sub OnLevelsChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Userid", DbType:="Int NOT NULL")>  _
	Public Property Userid() As Integer
		Get
			Return Me._Userid
		End Get
		Set
			If ((Me._Userid = value)  _
						= false) Then
				Me.OnUseridChanging(value)
				Me.SendPropertyChanging
				Me._Userid = value
				Me.SendPropertyChanged("Userid")
				Me.OnUseridChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Aid", DbType:="Int NOT NULL")>  _
	Public Property Aid() As Integer
		Get
			Return Me._Aid
		End Get
		Set
			If ((Me._Aid = value)  _
						= false) Then
				Me.OnAidChanging(value)
				Me.SendPropertyChanging
				Me._Aid = value
				Me.SendPropertyChanged("Aid")
				Me.OnAidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Counters", DbType:="Int NOT NULL")>  _
	Public Property Counters() As Integer
		Get
			Return Me._Counters
		End Get
		Set
			If ((Me._Counters = value)  _
						= false) Then
				Me.OnCountersChanging(value)
				Me.SendPropertyChanging
				Me._Counters = value
				Me.SendPropertyChanged("Counters")
				Me.OnCountersChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Levels", DbType:="Int NOT NULL")>  _
	Public Property Levels() As Integer
		Get
			Return Me._Levels
		End Get
		Set
			If ((Me._Levels = value)  _
						= false) Then
				Me.OnLevelsChanging(value)
				Me.SendPropertyChanging
				Me._Levels = value
				Me.SendPropertyChanged("Levels")
				Me.OnLevelsChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

Partial Public Class AJBibbloMoneyGetEarnFunctionResult
	
	Private _bibmoney As System.Nullable(Of Integer)
	
	Private _bonusX As System.Nullable(Of Integer)
	
	Private _EarnFunctionName As String
	
	Private _EarnfuncID As Integer
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bibmoney", DbType:="Int")>  _
	Public Property bibmoney() As System.Nullable(Of Integer)
		Get
			Return Me._bibmoney
		End Get
		Set
			If (Me._bibmoney.Equals(value) = false) Then
				Me._bibmoney = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bonusX", DbType:="Int")>  _
	Public Property bonusX() As System.Nullable(Of Integer)
		Get
			Return Me._bonusX
		End Get
		Set
			If (Me._bonusX.Equals(value) = false) Then
				Me._bonusX = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EarnFunctionName", DbType:="NVarChar(150)")>  _
	Public Property EarnFunctionName() As String
		Get
			Return Me._EarnFunctionName
		End Get
		Set
			If (String.Equals(Me._EarnFunctionName, value) = false) Then
				Me._EarnFunctionName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EarnfuncID", DbType:="Int NOT NULL")>  _
	Public Property EarnfuncID() As Integer
		Get
			Return Me._EarnfuncID
		End Get
		Set
			If ((Me._EarnfuncID = value)  _
						= false) Then
				Me._EarnfuncID = value
			End If
		End Set
	End Property
End Class

Partial Public Class ajbokmarkelserPointEarnedResult
	
	Private _PointEarned As System.Nullable(Of Integer)
	
	Private _AwardGroupID As Integer
	
	Private _AwardGroup As String
	
	Private _Occures As System.Nullable(Of Integer)
	
	Private _ToLevelUp As System.Nullable(Of Integer)
	
	Private _BibblimoneyEarnID As System.Nullable(Of Integer)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PointEarned", DbType:="Int")>  _
	Public Property PointEarned() As System.Nullable(Of Integer)
		Get
			Return Me._PointEarned
		End Get
		Set
			If (Me._PointEarned.Equals(value) = false) Then
				Me._PointEarned = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AwardGroupID", DbType:="Int NOT NULL")>  _
	Public Property AwardGroupID() As Integer
		Get
			Return Me._AwardGroupID
		End Get
		Set
			If ((Me._AwardGroupID = value)  _
						= false) Then
				Me._AwardGroupID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AwardGroup", DbType:="NVarChar(150)")>  _
	Public Property AwardGroup() As String
		Get
			Return Me._AwardGroup
		End Get
		Set
			If (String.Equals(Me._AwardGroup, value) = false) Then
				Me._AwardGroup = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Occures", DbType:="Int")>  _
	Public Property Occures() As System.Nullable(Of Integer)
		Get
			Return Me._Occures
		End Get
		Set
			If (Me._Occures.Equals(value) = false) Then
				Me._Occures = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ToLevelUp", DbType:="Int")>  _
	Public Property ToLevelUp() As System.Nullable(Of Integer)
		Get
			Return Me._ToLevelUp
		End Get
		Set
			If (Me._ToLevelUp.Equals(value) = false) Then
				Me._ToLevelUp = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BibblimoneyEarnID", DbType:="Int")>  _
	Public Property BibblimoneyEarnID() As System.Nullable(Of Integer)
		Get
			Return Me._BibblimoneyEarnID
		End Get
		Set
			If (Me._BibblimoneyEarnID.Equals(value) = false) Then
				Me._BibblimoneyEarnID = value
			End If
		End Set
	End Property
End Class

Partial Public Class ajbokmarkelserResult
	
	Private _Userid As Integer
	
	Private _Aid As Integer
	
	Private _Counters As Integer
	
	Private _Levels As Integer
	
	Private _Awardname As String
	
	Private _Beskrivning As String
	
	Private _Badgesrc As String
	
	Private _Occurs As Integer
	
	Private _Awardgroup As System.Nullable(Of Integer)
	
	Private _BibblimoneyEarnID As System.Nullable(Of Integer)
	
	Private _tolevelup As System.Nullable(Of Integer)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Userid", DbType:="Int NOT NULL")>  _
	Public Property Userid() As Integer
		Get
			Return Me._Userid
		End Get
		Set
			If ((Me._Userid = value)  _
						= false) Then
				Me._Userid = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Aid", DbType:="Int NOT NULL")>  _
	Public Property Aid() As Integer
		Get
			Return Me._Aid
		End Get
		Set
			If ((Me._Aid = value)  _
						= false) Then
				Me._Aid = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Counters", DbType:="Int NOT NULL")>  _
	Public Property Counters() As Integer
		Get
			Return Me._Counters
		End Get
		Set
			If ((Me._Counters = value)  _
						= false) Then
				Me._Counters = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Levels", DbType:="Int NOT NULL")>  _
	Public Property Levels() As Integer
		Get
			Return Me._Levels
		End Get
		Set
			If ((Me._Levels = value)  _
						= false) Then
				Me._Levels = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Awardname", DbType:="NVarChar(100) NOT NULL", CanBeNull:=false)>  _
	Public Property Awardname() As String
		Get
			Return Me._Awardname
		End Get
		Set
			If (String.Equals(Me._Awardname, value) = false) Then
				Me._Awardname = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Beskrivning", DbType:="NVarChar(150)")>  _
	Public Property Beskrivning() As String
		Get
			Return Me._Beskrivning
		End Get
		Set
			If (String.Equals(Me._Beskrivning, value) = false) Then
				Me._Beskrivning = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Badgesrc", DbType:="NVarChar(150)")>  _
	Public Property Badgesrc() As String
		Get
			Return Me._Badgesrc
		End Get
		Set
			If (String.Equals(Me._Badgesrc, value) = false) Then
				Me._Badgesrc = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Occurs", DbType:="Int NOT NULL")>  _
	Public Property Occurs() As Integer
		Get
			Return Me._Occurs
		End Get
		Set
			If ((Me._Occurs = value)  _
						= false) Then
				Me._Occurs = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Awardgroup", DbType:="Int")>  _
	Public Property Awardgroup() As System.Nullable(Of Integer)
		Get
			Return Me._Awardgroup
		End Get
		Set
			If (Me._Awardgroup.Equals(value) = false) Then
				Me._Awardgroup = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BibblimoneyEarnID", DbType:="Int")>  _
	Public Property BibblimoneyEarnID() As System.Nullable(Of Integer)
		Get
			Return Me._BibblimoneyEarnID
		End Get
		Set
			If (Me._BibblimoneyEarnID.Equals(value) = false) Then
				Me._BibblimoneyEarnID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tolevelup", DbType:="Int")>  _
	Public Property tolevelup() As System.Nullable(Of Integer)
		Get
			Return Me._tolevelup
		End Get
		Set
			If (Me._tolevelup.Equals(value) = false) Then
				Me._tolevelup = value
			End If
		End Set
	End Property
End Class
